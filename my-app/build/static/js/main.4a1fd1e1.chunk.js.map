{"version":3,"sources":["redux/action-creators/cards/fetchAllMonsters.js","redux/action-creators/cards/addMonsterCard.js","redux/action-creators/cards/deleteMonsterCard.js","redux/action-creators/cards/editMonsterCard.js","redux/action-creators/cards/addSpellCard.js","redux/action-creators/cards/fetchAllSpells.js","redux/action-creators/cards/deleteSpellCard.js","redux/action-creators/cards/editSpellCard.js","redux/action-creators/cards/addTrapCard.js","redux/action-creators/cards/fetchAllTraps.js","redux/action-creators/cards/deleteTrapCard.js","redux/action-creators/cards/editTrapCard.js","redux/action-creators/users/signupUser.js","redux/action-creators/users/loginUser.js","redux/action-creators/users/logoutUser.js","redux/action-creators/users/authUser.js","Components/Navigation.js","Components/MonsterCardCard.js","Components/AllPageTitles.js","Components/Loading.js","Components/CardIsEmpty.js","Screens/MonsterCardPage.js","cards_img/downloadImage.js","Screens/MonsterCardView.js","card_meta_data/index.js","cards_img/monster_cards/NormalMonster.webp","cards_img/monster_cards/EffectMonster.webp","cards_img/monster_cards/FusionMonster.webp","cards_img/monster_cards/RitualMonster.webp","cards_img/monster_cards/SynchroMonster.webp","cards_img/monsterAttrib/Fire.webp","cards_img/monsterAttrib/Dark.webp","cards_img/monsterAttrib/Water.webp","cards_img/monsterAttrib/Light.webp","cards_img/monsterAttrib/Earth.webp","cards_img/monsterAttrib/Wind.webp","cards_img/monsterAttrib/Divine.webp","cards_img/Star.webp","cards_img/dataUrlToFile.js","Components/ErrorMessage.js","Screens/MonsterCardEdit.js","Screens/AddMonsterCardPage.js","Components/SpellCardCard.js","Screens/SpellCardPage.js","cards_img/NormalSpell.webp","cards_img/FieldSpell.webp","cards_img/EquipSpell.webp","cards_img/QuickSpell.webp","cards_img/RitualSpell.webp","cards_img/ContinuousSpell.webp","Screens/AddSpellCardPage.js","Screens/SpellCardView.js","Screens/SpellCardEdit.js","cards_img/NormalTrap.webp","cards_img/ContinuousTrap.webp","cards_img/CounterTrap.webp","Screens/AddTrapCardPage.js","Components/TrapCardCard.js","Screens/TrapCardPage.js","Screens/TrapCardView.js","Screens/TrapCardEdit.js","Screens/RegisterPage.js","Screens/LoginPage.js","Screens/HomePage.js","Components/Footer.js","App.js","reportWebVitals.js","redux/reducers/monsterCardReducer.js","redux/reducers/spellCardReducer.js","redux/reducers/trapCardReducer.js","redux/reducers/signupUser.js","redux/reducers/loginUser.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["fetchAllMonsters","dispatch","type","axios","get","then","res","payload","data","cards","catch","err","message","addMonsterCard","monsterCard","selectedImage","fileData","bodyFormData","FormData","append","MonsterName","CardType","MonsterType","MonsterRace","MonsterIsNormal","MonsterEffDesc","MonsterAttribute","MonsterStar","MonsterAttack","MonsterDefense","CardAuthor","method","url","headers","deleteMonsterCard","id","delete","editMonsterCard","MonsterImage","ConvertedImage","_id","addSpellCard","spellCard","SpellName","SpellEff","SpellType","fetchAllSpells","deleteSpellCard","editSpellCard","SpellImage","addTrapCard","trapCard","TrapName","TrapType","TrapEff","fetchAllTraps","deleteTrapCard","editTrapCard","TrapImage","signupUser","user","post","signupError","newUser","loginUser","userCred","loginState","credentials","logoutUser","authUser","Navigation","useDispatch","useState","hambar","setHamBar","bindActionCreators","actionCreators","state","useSelector","className","exact","to","activeClassName","onClick","username","MonsterCardCard","cardInfo","alt","src","AllPageTitles","title","Loading","style","borderTopColor","CardIsEmpty","card","MonsterCardPage","useEffect","loading","error","monsterCards","length","map","downloadImage","imgUrl","cardName","fetch","img","blob","window","URL","createObjectURL","link","document","createElement","href","download","click","MonsterCardView","card_id","useParams","setCardInfo","setLoading","a","fetchCardInfo","onLoad","monsterRaceArr","sort","monsterTypeArr","monsterAttributeArr","spellTypeArr","trapTypeArr","dataURLtoFile","dataurl","filename","arr","split","mime","match","bstr","atob","n","u8arr","Uint8Array","charCodeAt","File","ErrorMessage","MonsterCardEdit","monsterImgContainer","useRef","regex","history","useHistory","undefined","monsterEffDescError","setMonsterEffDescError","monsterNameError","setMonsterNameError","file","setFile","setSelectedImage","monsterImage","setMonsterImage","monsterName","setMonsterName","cardType","setCardType","monsterType","setMonsterType","monsterRace","setMonsterRace","monsterIsNormal","setMonsterIsNormal","monsterEffDesc","setMonsterEffDesc","monsterAttribute","setMonsterAttribute","monsterStar","setMonsterStar","monsterAttack","setMonsterAttack","monsterDefense","setMonsterDefense","cardAuthor","setCardAuthor","convertedImage","setConvertedImage","convertDomToImg","domtoimage","toPng","current","dataUrl","push","console","selectMonsterAttributeImg","Fire","Wind","Water","Dark","Light","Divine","Earth","setMonsterStarHandler","array","i","onSubmit","e","preventDefault","fill","xmlns","viewBox","d","name","accept","onChange","target","files","value","test","required","placeholder","race","checked","htmlFor","row","col","attri","min","max","disabled","ref","NormalMonster","EffectMonster","FusionMonster","RitualMonster","SynchroMonster","key","Star","AddMonsterCardPage","setMonstersLength","selectedImageError","setSelectedImageError","alert","encType","SpellCardCard","SpellCardPage","spellCards","AddSpellCardPage","spellImgContainer","spellNameError","setSpellNameError","spellEffError","setSpellEffError","spellName","setSpellName","spellEff","setSpellEff","spellType","setSpellType","NormalSpell","ContinuousSpell","EquipSpell","RitualSpell","FieldSpell","QuickSpell","SpellCardView","SpellCardEdit","spellImage","setSpellImage","AddTrapCardPage","trapImgContainer","trapNameError","setTrapNameError","trapEffError","setTrapEffError","trapName","setTrapName","trapEff","setTrapEff","trapType","setTrapType","NormalTrap","ContinuousTrap","CounterTrap","TrapCardCard","TrapCardPage","trapCards","TrapCardView","TrapCardEdit","trapImage","setTrapImage","RegisterPage","email","setEmail","setUsername","password","setPassword","emailError","setEmailError","usernameError","setUsernameError","stateSignup","stateLogin","Username","Password","Email","String","toLowerCase","validateEmail","isSuccess","isAuth","LoginPage","loginError","HomePage","Footer","App","location","useLocation","pathname","path","redirect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","monsterCardsReducer","action","filter","monster","spellCardReducer","trapCardReducer","SignupUserReducer","loginUserReducer","reducers","combineReducers","monsterCardReducer","signupUserReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4a1fd1e1.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst FETCH_ALL_MONSTER_REQUEST = \"FETCH_ALL_MONSTER_REQUEST\";\r\nconst FETCH_ALL_MONSTER_SUCCESS = \"FETCH_ALL_MONSTER_SUCCESS\";\r\nconst FETCH_ALL_MONSTER_FAILS = \"FETCH_ALL_MONSTER_FAILS\";\r\n\r\n// fetch all monster cards\r\nconst fetchAllMonsterCardsRequest = () => ({\r\n  type: FETCH_ALL_MONSTER_REQUEST,\r\n});\r\n\r\nconst fetchAllMonsterCardsSuccess = (monsterCards) => ({\r\n  type: FETCH_ALL_MONSTER_SUCCESS,\r\n  payload: monsterCards,\r\n});\r\n\r\nconst fetchAllMonsterCardsFails = (error) => ({\r\n  type: FETCH_ALL_MONSTER_FAILS,\r\n  payload: error,\r\n});\r\n\r\n// actions-creators\r\nconst fetchAllMonsters = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchAllMonsterCardsRequest());\r\n    axios\r\n      .get(\"/api/cards/monsters\")\r\n      .then((res) => {\r\n        dispatch(fetchAllMonsterCardsSuccess(res.data.cards));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchAllMonsterCardsFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default fetchAllMonsters;\r\n","import axios from \"axios\";\r\n\r\nconst ADD_MONSTER_CARD_REQUEST = \"ADD_MONSTER_CARD\";\r\nconst ADD_MONSTER_CARD_SUCCESS = \"ADD_MONSTER_CARD_SUCCESS\";\r\nconst ADD_MONSTER_CARD_FAILS = \"ADD_MONSTER_CARD_FAILS\";\r\n\r\n// add monster card\r\nconst addMonsterCardRequest = () => ({\r\n  type: ADD_MONSTER_CARD_REQUEST,\r\n});\r\n\r\nconst addMonsterCardSuccess = (data) => ({\r\n  type: ADD_MONSTER_CARD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst addMonsterCardFails = (error) => ({\r\n  type: ADD_MONSTER_CARD_FAILS,\r\n  payload: error,\r\n});\r\n// action creator\r\nconst addMonsterCard = ({ monsterCard, selectedImage, fileData }) => {\r\n  return (dispatch) => {\r\n    dispatch(addMonsterCardRequest());\r\n    let bodyFormData = new FormData();\r\n    bodyFormData.append(\"MonsterName\", monsterCard.MonsterName);\r\n    bodyFormData.append(\"CardType\", monsterCard.CardType);\r\n    bodyFormData.append(\"MonsterType\", monsterCard.MonsterType);\r\n    bodyFormData.append(\"MonsterRace\", monsterCard.MonsterRace);\r\n    bodyFormData.append(\"MonsterIsNormal\", monsterCard.MonsterIsNormal);\r\n    bodyFormData.append(\"MonsterEffDesc\", monsterCard.MonsterEffDesc);\r\n    bodyFormData.append(\"MonsterAttribute\", monsterCard.MonsterAttribute);\r\n    bodyFormData.append(\"MonsterStar\", monsterCard.MonsterStar);\r\n    bodyFormData.append(\"MonsterAttack\", monsterCard.MonsterAttack);\r\n    bodyFormData.append(\"MonsterDefense\", monsterCard.MonsterDefense);\r\n    bodyFormData.append(\"CardAuthor\", monsterCard.CardAuthor);\r\n\r\n    bodyFormData.append(\"file\", selectedImage);\r\n    bodyFormData.append(\"file\", fileData);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/cards/monsters\",\r\n      data: bodyFormData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        dispatch(addMonsterCardSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(addMonsterCardFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default addMonsterCard;\r\n","import axios from \"axios\";\r\n\r\nconst DELETE_MONSTER_CARD_REQUEST = \"DELETE_MONSTER_CARD_REQUEST\";\r\nconst DELETE_MONSTER_CARD_SUCCESS = \"DELETE_MONSTER_CARD_SUCCESS\";\r\nconst DELETE_MONSTER_CARD_FAILS = \"DELETE_MONSTER_CARD_FAILS\";\r\n\r\n// actions\r\nconst deleteMonsterCardRequest = () => ({\r\n  type: DELETE_MONSTER_CARD_REQUEST,\r\n});\r\n\r\nconst deleteMonsterCardSuccess = (deletedMonster) => ({\r\n  type: DELETE_MONSTER_CARD_SUCCESS,\r\n  payload: deletedMonster,\r\n});\r\n\r\nconst deleteMonsterCardFails = (error) => ({\r\n  type: DELETE_MONSTER_CARD_FAILS,\r\n  payload: error,\r\n});\r\n\r\n// action-creators\r\nconst deleteMonsterCard = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(deleteMonsterCardRequest());\r\n    axios\r\n      .delete(\"/api/cards/monsters/\" + id)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          dispatch(deleteMonsterCardSuccess(res.data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(deleteMonsterCardFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default deleteMonsterCard;\r\n","import axios from \"axios\";\r\n\r\nconst EDIT_MONSTER_CARD_REQUEST = \"EDIT_MONSTER_CARD_REQUEST\";\r\nconst EDIT_MONSTER_CARD_SUCCESS = \"EDIT_MONSTER_CARD_SUCCESS\";\r\nconst EDIT_MONSTER_CARD_FAILS = \"EDIT_MONSTER_CARD_FAILS\";\r\n\r\n// actions\r\nconst editMonsterCardRequest = () => ({\r\n  type: EDIT_MONSTER_CARD_REQUEST,\r\n});\r\n\r\nconst editMonsterCardSuccess = (updated) => ({\r\n  type: EDIT_MONSTER_CARD_SUCCESS,\r\n  payload: updated,\r\n});\r\n\r\nconst editMonsterCardFails = (error) => ({\r\n  type: EDIT_MONSTER_CARD_FAILS,\r\n});\r\n\r\n// action-creator\r\nconst editMonsterCard = ({ monsterCard, selectedImage, fileData }) => {\r\n  return (dispatch) => {\r\n    dispatch(editMonsterCardRequest());\r\n    let bodyFormData = new FormData();\r\n\r\n    bodyFormData.append(\"MonsterImage\", monsterCard.MonsterImage);\r\n    bodyFormData.append(\"MonsterName\", monsterCard.MonsterName);\r\n    bodyFormData.append(\"CardType\", monsterCard.CardType);\r\n    bodyFormData.append(\"MonsterType\", monsterCard.MonsterType);\r\n    bodyFormData.append(\"MonsterRace\", monsterCard.MonsterRace);\r\n    bodyFormData.append(\"MonsterIsNormal\", monsterCard.MonsterIsNormal);\r\n    bodyFormData.append(\"MonsterEffDesc\", monsterCard.MonsterEffDesc);\r\n    bodyFormData.append(\"MonsterAttribute\", monsterCard.MonsterAttribute);\r\n    bodyFormData.append(\"MonsterStar\", monsterCard.MonsterStar);\r\n    bodyFormData.append(\"MonsterAttack\", monsterCard.MonsterAttack);\r\n    bodyFormData.append(\"MonsterDefense\", monsterCard.MonsterDefense);\r\n    bodyFormData.append(\"CardAuthor\", monsterCard.CardAuthor);\r\n    bodyFormData.append(\"ConvertedImage\", monsterCard.ConvertedImage);\r\n\r\n    bodyFormData.append(\"file\", selectedImage);\r\n    bodyFormData.append(\"file\", fileData);\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"/api/cards/monsters/\" + monsterCard._id,\r\n      data: bodyFormData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        dispatch(editMonsterCardSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(editMonsterCardFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default editMonsterCard;\r\n","import axios from \"axios\";\r\n\r\nconst ADD_SPELL_CARD_REQUEST = \"ADD_SPELL_CARD_REQUEST\";\r\nconst ADD_SPELL_CARD_SUCCESS = \"ADD_SPELL_CARD_SUCCESS\";\r\nconst ADD_SPELL_CARD_FAILS = \"ADD_SPELL_CARD_FAILS\";\r\n\r\nconst addSpellCardRequestAction = () => ({\r\n  type: ADD_SPELL_CARD_REQUEST,\r\n});\r\n\r\nconst addSpellCardSuccessAction = (data) => ({\r\n  type: ADD_SPELL_CARD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst addSpellCardFailsAction = (error) => ({\r\n  type: ADD_SPELL_CARD_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst addSpellCard = ({ spellCard, selectedImage, fileData }) => {\r\n  return (dispatch) => {\r\n    dispatch(addSpellCardRequestAction());\r\n    let bodyFormData = new FormData();\r\n\r\n    bodyFormData.append(\"SpellName\", spellCard.SpellName);\r\n    bodyFormData.append(\"SpellEff\", spellCard.SpellEff);\r\n    bodyFormData.append(\"SpellType\", spellCard.SpellType);\r\n    bodyFormData.append(\"CardType\", spellCard.CardType);\r\n    bodyFormData.append(\"CardAuthor\", spellCard.CardAuthor);\r\n\r\n    bodyFormData.append(\"file\", selectedImage);\r\n    bodyFormData.append(\"file\", fileData);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/cards/spells\",\r\n      data: bodyFormData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        dispatch(addSpellCardSuccessAction(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(addSpellCardFailsAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default addSpellCard;\r\n","import axios from \"axios\";\r\n\r\nconst FETCH_ALL_SPELLS_REQUEST = \"FETCH_ALL_SPELLS_REQUEST\";\r\nconst FETCH_ALL_SPELLS_SUCCESS = \"FETCH_ALL_SPELLS_SUCCESS\";\r\nconst FETCH_ALL_SPELLS_FAILS = \"FETCH_ALL_SPELLS_FAILS\";\r\n\r\nconst fetchAllSpellsRequestAction = () => ({\r\n  type: FETCH_ALL_SPELLS_REQUEST,\r\n});\r\n\r\nconst fetchAllSpellsSuccessAction = (data) => ({\r\n  type: FETCH_ALL_SPELLS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchAllSpellsFailsAction = (error) => ({\r\n  type: FETCH_ALL_SPELLS_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst fetchAllSpells = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchAllSpellsRequestAction());\r\n\r\n    axios\r\n      .get(\"/api/cards/spells\")\r\n      .then((res) => {\r\n        dispatch(fetchAllSpellsSuccessAction(res.data.cards));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchAllSpellsFailsAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default fetchAllSpells;\r\n","import axios from \"axios\";\r\n\r\nconst DELETE_SPELL_CARD_REQUEST = \"DELETE_SPELL_CARD_REQUEST\";\r\nconst DELETE_SPELL_CARD_SUCCESS = \"DELETE_SPELL_CARD_SUCCESS\";\r\nconst DELETE_SPELL_CARD_FAILS = \"DELETE_SPELL_CARD_FAILS\";\r\n\r\nconst deleteSpellCardRequestAction = () => ({\r\n  type: DELETE_SPELL_CARD_REQUEST,\r\n});\r\n\r\nconst deleteSpellCardSuccessAction = (data) => ({\r\n  type: DELETE_SPELL_CARD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst deleteSpellCardFailsAction = (error) => ({\r\n  type: DELETE_SPELL_CARD_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst deleteSpellCard = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(deleteSpellCardRequestAction());\r\n    axios\r\n      .delete(\"/api/cards/spells/\" + id)\r\n      .then((res) => {\r\n        if (res.data) {\r\n          dispatch(deleteSpellCardSuccessAction(res.data));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(deleteSpellCardFailsAction(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default deleteSpellCard;\r\n","import axios from \"axios\";\r\n\r\nconst EDIT_SPELL_CARD_REQUEST = \"EDIT_SPELL_CARD_REQUEST\";\r\nconst EDIT_SPELL_CARD_SUCCESS = \"EDIT_SPELL_CARD_SUCCESS\";\r\nconst EDIT_SPELL_CARD_FAILS = \"EDIT_SPELL_CARD_FAILS\";\r\n\r\nconst editSpellCardRequest = () => ({\r\n  type: EDIT_SPELL_CARD_REQUEST,\r\n});\r\n\r\nconst editSpellCardSuccess = (data) => ({\r\n  type: EDIT_SPELL_CARD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst editSpellCardFails = (error) => ({\r\n  type: EDIT_SPELL_CARD_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst editSpellCard = ({ spellCard, selectedImage, fileData }) => {\r\n  return (dispatch) => {\r\n    dispatch(editSpellCardRequest());\r\n\r\n    let bodyFormData = new FormData();\r\n\r\n    bodyFormData.append(\"SpellImage\", spellCard.SpellImage);\r\n    bodyFormData.append(\"SpellName\", spellCard.SpellName);\r\n    bodyFormData.append(\"SpellType\", spellCard.SpellType);\r\n    bodyFormData.append(\"SpellEff\", spellCard.SpellEff);\r\n    bodyFormData.append(\"CardType\", spellCard.CardType);\r\n    bodyFormData.append(\"CardAuthor\", spellCard.CardAuthor);\r\n    bodyFormData.append(\"ConvertedImage\", spellCard.ConvertedImage);\r\n\r\n    bodyFormData.append(\"file\", selectedImage);\r\n    bodyFormData.append(\"file\", fileData);\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"/api/cards/spells/\" + spellCard._id,\r\n      data: bodyFormData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        dispatch(editSpellCardSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(editSpellCardFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default editSpellCard;\r\n","import axios from \"axios\";\r\n\r\nconst ADD_TRAP_CARD_REQUEST = \"ADD_TRAP_CARD_REQUEST\";\r\nconst ADD_TRAP_CARD_SUCCESS = \"ADD_TRAP_CARD_SUCCESS\";\r\nconst ADD_TRAP_CARD_FAILS = \"ADD_TRAP_CARD_FAILS\";\r\n\r\nconst addTrapCardRequest = () => ({\r\n  type: ADD_TRAP_CARD_REQUEST,\r\n});\r\n\r\nconst addTrapCardSuccess = (data) => ({\r\n  type: ADD_TRAP_CARD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst addTrapCardFails = (error) => ({\r\n  type: ADD_TRAP_CARD_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst addTrapCard = ({ trapCard, selectedImage, fileData }) => {\r\n  return (dispatch) => {\r\n    dispatch(addTrapCardRequest());\r\n\r\n    let bodyFormData = new FormData();\r\n\r\n    bodyFormData.append(\"TrapName\", trapCard.TrapName);\r\n    bodyFormData.append(\"TrapType\", trapCard.TrapType);\r\n    bodyFormData.append(\"TrapEff\", trapCard.TrapEff);\r\n    bodyFormData.append(\"CardType\", trapCard.CardType);\r\n    bodyFormData.append(\"CardAuthor\", trapCard.CardAuthor);\r\n\r\n    bodyFormData.append(\"file\", selectedImage);\r\n    bodyFormData.append(\"file\", fileData);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"/api/cards/traps\",\r\n      data: bodyFormData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        dispatch(addTrapCardSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(addTrapCardFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default addTrapCard;\r\n","import axios from \"axios\";\r\n\r\nconst FETCH_TRAP_CARD_REQUEST = \"FETCH_TRAP_CARD_REQUEST\";\r\nconst FETCH_TRAP_CARD_SUCCESS = \"FETCH_TRAP_CARD_SUCCESS\";\r\nconst FETCH_TRAP_CARD_FAILS = \"FETCH_TRAP_CARD_FAILS\";\r\n\r\nconst fetchTrapCardRequest = () => ({\r\n  type: FETCH_TRAP_CARD_REQUEST,\r\n});\r\n\r\nconst fetchTrapCardSuccess = (data) => ({\r\n  type: FETCH_TRAP_CARD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst fetchTrapCardFails = (error) => ({\r\n  type: FETCH_TRAP_CARD_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst fetchAllTraps = () => {\r\n  return (dispatch) => {\r\n    dispatch(fetchTrapCardRequest());\r\n    axios\r\n      .get(\"/api/cards/traps\")\r\n      .then((res) => {\r\n        dispatch(fetchTrapCardSuccess(res.data.cards));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(fetchTrapCardFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default fetchAllTraps;\r\n","import axios from \"axios\";\r\n\r\nconst DELETE_TRAP_CARD_REQUEST = \"DELETE_TRAP_CARD_REQUEST\";\r\nconst DELETE_TRAP_CARD_SUCCESS = \"DELETE_TRAP_CARD_SUCCESS\";\r\nconst DELETE_TRAP_CARD_FAILS = \"DELETE_TRAP_CARD_FAILS\";\r\n\r\nconst deleteTrapCardRequest = () => ({\r\n  type: DELETE_TRAP_CARD_REQUEST,\r\n});\r\n\r\nconst deleteTrapCardSuccess = (data) => ({\r\n  type: DELETE_TRAP_CARD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst deleteTrapCardFails = (error) => ({\r\n  type: DELETE_TRAP_CARD_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst deleteTrapCard = (id) => {\r\n  return (dispatch) => {\r\n    dispatch(deleteTrapCardRequest());\r\n    axios\r\n      .delete(\"/api/cards/traps/\" + id)\r\n      .then((res) => {\r\n        dispatch(deleteTrapCardSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(deleteTrapCardFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default deleteTrapCard;\r\n","import axios from \"axios\";\r\n\r\nconst EDIT_TRAP_CARD_REQUEST = \"EDIT_TRAP_CARD_REQUEST\";\r\nconst EDIT_TRAP_CARD_SUCCESS = \"EDIT_TRAP_CARD_SUCCESS\";\r\nconst EDIT_TRAP_CARD_FAILS = \"EDIT_TRAP_CARD_FAILS\";\r\n\r\nconst editTrapCardRequest = () => ({\r\n  type: EDIT_TRAP_CARD_REQUEST,\r\n});\r\n\r\nconst editTrapCardSuccess = (data) => ({\r\n  type: EDIT_TRAP_CARD_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst editTrapCardFails = (error) => ({\r\n  type: EDIT_TRAP_CARD_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst editTrapCard = ({ trapCard, selectedImage, fileData }) => {\r\n  return (dispatch) => {\r\n    dispatch(editTrapCardRequest());\r\n\r\n    let bodyFormData = new FormData();\r\n\r\n    bodyFormData.append(\"TrapImage\", trapCard.TrapImage);\r\n    bodyFormData.append(\"TrapName\", trapCard.TrapName);\r\n    bodyFormData.append(\"TrapType\", trapCard.TrapType);\r\n    bodyFormData.append(\"TrapEff\", trapCard.TrapEff);\r\n    bodyFormData.append(\"CardType\", trapCard.CardType);\r\n    bodyFormData.append(\"CardAuthor\", trapCard.CardAuthor);\r\n    bodyFormData.append(\"ConvertedImage\", trapCard.ConvertedImage);\r\n\r\n    bodyFormData.append(\"file\", selectedImage);\r\n    bodyFormData.append(\"file\", fileData);\r\n\r\n    axios({\r\n      method: \"patch\",\r\n      url: \"/api/cards/traps/\" + trapCard._id,\r\n      data: bodyFormData,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then((res) => {\r\n        dispatch(editTrapCardSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(editTrapCardFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default editTrapCard;\r\n","import axios from \"axios\";\r\n\r\nconst SIGNUP_USER_REQUEST = \"SIGNUP_USER_REQUEST\";\r\nconst SIGNUP_USER_SUCCESS = \"SIGNUP_USER_SUCCESS\";\r\nconst SIGNUP_USER_ERROR = \"SIGNUP_USER_ERROR\";\r\nconst SIGNUP_USER_FAILS = \"SIGNUP_USER_FAILS\";\r\n\r\nconst signupUserRequest = () => ({\r\n  type: SIGNUP_USER_REQUEST,\r\n});\r\n\r\nconst signupUserSuccess = (data) => ({\r\n  type: SIGNUP_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst signupUserError = (error) => ({\r\n  type: SIGNUP_USER_ERROR,\r\n  payload: error,\r\n});\r\n\r\nconst signupUserFails = (error) => ({\r\n  type: SIGNUP_USER_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst signupUser = (user) => {\r\n  return (dispatch) => {\r\n    dispatch(signupUserRequest());\r\n\r\n    axios\r\n      .post(\"/api/users/signup\", user)\r\n      .then((res) => {\r\n        if (res.data.signupError) {\r\n          dispatch(signupUserError(res.data.signupError));\r\n        } else {\r\n          dispatch(signupUserSuccess(res.data.newUser));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        dispatch(signupUserFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default signupUser;\r\n","import axios from \"axios\";\r\n\r\nconst LOGIN_USER_REQUEST = \"LOGIN_USER_REQUEST\";\r\nconst LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nconst LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\r\n\r\nconst loginUserRequest = () => ({\r\n  type: LOGIN_USER_REQUEST,\r\n});\r\n\r\nconst loginUserSuccess = ({ loginState, credentials }) => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  payload: {\r\n    loginState,\r\n    credentials,\r\n  },\r\n});\r\n\r\nconst loginUserError = (error) => ({\r\n  type: LOGIN_USER_ERROR,\r\n  payload: error,\r\n});\r\n\r\nconst loginUser = (userCred) => {\r\n  return (dispatch) => {\r\n    dispatch(loginUserRequest());\r\n\r\n    axios\r\n      .post(\"/api/users/login\", userCred)\r\n      .then((res) => {\r\n        dispatch(loginUserSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(loginUserError(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default loginUser;\r\n","import axios from \"axios\";\r\n\r\nconst LOGOUT_USER_REQUEST = \"LOGOUT_USER_REQUEST\";\r\nconst LOGOUT_USER_SUCCESS = \"LOGOUT_USER_SUCCESS\";\r\nconst LOGOUT_USER_ERROR = \"LOGOUT_USER_ERROR\";\r\n\r\nconst logoutUserRequest = () => ({\r\n  type: LOGOUT_USER_REQUEST,\r\n});\r\n\r\nconst logoutUserSuccess = ({ loginState, credentials }) => ({\r\n  type: LOGOUT_USER_SUCCESS,\r\n  payload: {\r\n    loginState,\r\n    credentials,\r\n  },\r\n});\r\n\r\nconst logoutUserError = (error) => ({\r\n  type: LOGOUT_USER_ERROR,\r\n  payload: error,\r\n});\r\n\r\nconst logoutUser = () => {\r\n  return (dispatch) => {\r\n    dispatch(logoutUserRequest());\r\n\r\n    axios\r\n      .delete(\"/api/users/logout\")\r\n      .then((res) => {\r\n        dispatch(logoutUserSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(logoutUserError(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default logoutUser;\r\n","import axios from \"axios\";\r\n\r\nconst AUTHENTICATE_USER_REQUEST = \"AUTHENTICATE_USER_REQUEST\";\r\nconst AUTHENTICATE_USER_SUCCESS = \"AUTHENTICATE_USER_SUCCESS\";\r\nconst AUTHENTICATE_USER_FAILS = \"AUTHENTICATE_USER_FAILS\";\r\n\r\nconst authUserRequest = () => ({\r\n  type: AUTHENTICATE_USER_REQUEST,\r\n});\r\n\r\nconst authUserSuccess = (data) => ({\r\n  type: AUTHENTICATE_USER_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nconst authUserFails = (error) => ({\r\n  type: AUTHENTICATE_USER_FAILS,\r\n  payload: error,\r\n});\r\n\r\nconst authUser = (userCred) => {\r\n  return (dispatch) => {\r\n    dispatch(authUserRequest());\r\n\r\n    axios\r\n      .post(\"/api/users/authenticate\", userCred)\r\n      .then((res) => {\r\n        dispatch(authUserSuccess(res.data));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(authUserFails(err.message));\r\n      });\r\n  };\r\n};\r\n\r\nexport default authUser;\r\n","import { React, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { actionCreators } from \"../redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { MenuIcon, XIcon } from \"@heroicons/react/solid\";\r\n\r\nfunction Navigation() {\r\n  const dispatch = useDispatch();\r\n  const [hambar, setHamBar] = useState(false);\r\n\r\n  const { logoutUser } = bindActionCreators(actionCreators, dispatch);\r\n  const state = useSelector((state) => state.loginUser);\r\n\r\n  return (\r\n    <div className=\"w-full bg-green-400\">\r\n      <nav className=\"flex w-11/12 mx-auto justify-between items-center py-2 sm:py-4\">\r\n        <h3 className=\"font-bold text-gray-800 text-xl\">Yugioh! Card Maker!</h3>\r\n        {/* pc screen navlinks */}\r\n        <ul className=\"hidden sm:block sm:flex w-6/12 justify-between sm:max-w-sm items-center text-gray-800\">\r\n          <li className=\"\">\r\n            <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"\">\r\n            <NavLink to=\"/monsters\" activeClassName=\"selected\">\r\n              Monsters\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"\">\r\n            <NavLink to=\"/spells\" activeClassName=\"selected\">\r\n              Spells\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"\">\r\n            <NavLink to=\"/traps\" activeClassName=\"selected\">\r\n              Traps\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <button\r\n              onClick={() => {\r\n                logoutUser();\r\n              }}\r\n              className=\"bg-red-500 py-2 px-3 rounded-md text-gray-100\"\r\n            >\r\n              Logout\r\n            </button>\r\n          </li>\r\n        </ul>\r\n        {/* mobile navlinks */}\r\n        <div className=\"relative sm:hidden\">\r\n          <button\r\n            className=\"sm:hidden\"\r\n            onClick={() => setHamBar(hambar ? false : true)}\r\n          >\r\n            {hambar ? (\r\n              <XIcon className=\"h-9 w-9 text-gray-900\" />\r\n            ) : (\r\n              <MenuIcon className=\"h-9 w-9 text-gray-900\" />\r\n            )}\r\n          </button>\r\n          <ul\r\n            className={\r\n              hambar\r\n                ? \"absolute bg-gray-800 text-white py-1 px-5 right-1 mt-2\"\r\n                : \"absolute hidden\"\r\n            }\r\n          >\r\n            <li\r\n              onClick={() => setHamBar(false)}\r\n              className=\"py-2 px-2 text-center\"\r\n            >\r\n              <NavLink exact to=\"/\" activeClassName=\"selected\">\r\n                Home\r\n              </NavLink>\r\n            </li>\r\n            <li\r\n              onClick={() => setHamBar(false)}\r\n              className=\"py-2 px-2 text-center\"\r\n            >\r\n              <NavLink to=\"/monsters\" activeClassName=\"selected\">\r\n                Monsters\r\n              </NavLink>\r\n            </li>\r\n            <li\r\n              onClick={() => setHamBar(false)}\r\n              className=\"py-2 px-2 text-center\"\r\n            >\r\n              <NavLink to=\"/spells\" activeClassName=\"selected\">\r\n                Spells\r\n              </NavLink>\r\n            </li>\r\n            <li\r\n              onClick={() => setHamBar(false)}\r\n              className=\"py-2 px-2 text-center\"\r\n            >\r\n              <NavLink to=\"/traps\" activeClassName=\"selected\">\r\n                Traps\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"py-2 px-2 text-center\">\r\n              {state.credentials.username}\r\n            </li>\r\n            <li className=\"py-2 px-2 \">\r\n              <button\r\n                onClick={() => {\r\n                  logoutUser();\r\n                }}\r\n                className=\"w-full\"\r\n              >\r\n                Logout\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport { EyeIcon, XIcon } from \"@heroicons/react/solid\";\r\n\r\nfunction MonsterCardCard({ cardInfo }) {\r\n  const dispatch = useDispatch();\r\n  const { deleteMonsterCard } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  return (\r\n    <div className=\"card-card-container\">\r\n      <img\r\n        alt=\"Monster\"\r\n        src={\"/image/\" + cardInfo.MonsterImage}\r\n        className=\"card-card-image\"\r\n      />\r\n      <div className=\"card-details-container\">\r\n        <p className=\"card-card-name\">{cardInfo.MonsterName}</p>\r\n        <p>{cardInfo.MonsterType} Monster</p>\r\n        <div className=\"card-btn-container\">\r\n          <button className=\"view-card-btn\">\r\n            <EyeIcon className=\"EyeIconStyles\" />\r\n            <Link to={\"/monsters/\" + cardInfo._id}>View</Link>\r\n          </button>\r\n          <button\r\n            className=\"delete-card-btn\"\r\n            onClick={() => deleteMonsterCard(cardInfo._id)}\r\n          >\r\n            <XIcon className=\"XIconStyles\" />\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonsterCardCard;\r\n","import React from \"react\";\r\n\r\nfunction AllPageTitles({ title }) {\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-center font-bold py-5 text-2xl text-purple-500 sm:text-3xl text-2xl\">\r\n        {title}\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllPageTitles;\r\n","import React from \"react\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <div\r\n      style={{ borderTopColor: \"transparent\" }}\r\n      className=\"mx-auto w-12 h-12 border-4 border-blue-400 border-solid rounded-full animate-spin my-2\"\r\n    ></div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nfunction CardIsEmpty({ card }) {\r\n  return (\r\n    <div className=\"text-center text-2xl font-semibold text-red-700 my-8\">\r\n      {card} Bag is Empty!\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardIsEmpty;\r\n","import { React, useEffect } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport MonsterCardCard from \"../Components/MonsterCardCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { PlusCircleIcon } from \"@heroicons/react/solid\";\r\nimport Loading from \"../Components/Loading\";\r\nimport CardIsEmpty from \"../Components/CardIsEmpty\";\r\n\r\nfunction MonsterCardPage() {\r\n  const dispatch = useDispatch();\r\n  const { fetchAllMonsters } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const state = useSelector((state) => state.monsterCard);\r\n\r\n  useEffect(() => {\r\n    fetchAllMonsters();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Your Monster Cards\" />\r\n      <button className=\"add-card-btn\">\r\n        <PlusCircleIcon className=\"PlusCircleIconStyles\" />\r\n        <NavLink to=\"/monsters/add\">Add Monster Card</NavLink>\r\n      </button>\r\n\r\n      {state.loading ? (\r\n        <Loading />\r\n      ) : state.error === \"\" ? (\r\n        state.monsterCards.length !== 0 ? (\r\n          state.monsterCards.map((card) => (\r\n            <MonsterCardCard cardInfo={card} key={card._id} />\r\n          ))\r\n        ) : (\r\n          <CardIsEmpty card=\"Monster\" />\r\n        )\r\n      ) : (\r\n        <p>{state.error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonsterCardPage;\r\n","export default function downloadImage(imgUrl, cardName) {\r\n  fetch(imgUrl)\r\n    .then((img) => img.blob())\r\n    .then((blob) => {\r\n      let url = window.URL.createObjectURL(blob);\r\n      let link = document.createElement(\"a\");\r\n      link.href = url;\r\n      link.download = cardName + \".png\";\r\n      link.click();\r\n    });\r\n}\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport downloadImage from \"../cards_img/downloadImage\";\r\nimport axios from \"axios\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { DownloadIcon, PencilIcon } from \"@heroicons/react/solid\";\r\nimport Loading from \"../Components/Loading\";\r\n\r\nfunction MonsterCardView() {\r\n  const { card_id } = useParams();\r\n  const [cardInfo, setCardInfo] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const imgUrl = \"/image/\" + cardInfo.ConvertedImage;\r\n  // get card on load\r\n  useEffect(() => {\r\n    const fetchCardInfo = async () => {\r\n      const { data } = await axios.get(\"/api/cards/monsters/\" + card_id);\r\n\r\n      setCardInfo(data);\r\n    };\r\n\r\n    fetchCardInfo();\r\n  }, [card_id]);\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title={cardInfo.MonsterName} />\r\n\r\n      {cardInfo.length === 0 ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"view-card-container \">\r\n          <img\r\n            alt=\"Monster\"\r\n            className=\"converted-image view-card-converted\"\r\n            src={\"/image/\" + cardInfo.ConvertedImage}\r\n            onLoad={() => setLoading(false)}\r\n          />\r\n          <div className=\"view-card-btn-container\">\r\n            <button\r\n              onClick={() => {\r\n                downloadImage(imgUrl, cardInfo.MonsterName);\r\n              }}\r\n              className=\"view-card-download-btn\"\r\n            >\r\n              <DownloadIcon className=\"DownloadIconStyles\" />\r\n              Download\r\n            </button>\r\n            <Link to={\"/monster/edit/\" + cardInfo._id}>\r\n              <button className=\"view-card-edit-btn\">\r\n                <PencilIcon className=\"PencilIconStyles\" />\r\n                Edit\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonsterCardView;\r\n","const monsterRaceArr = [\r\n  \"Aqua\",\r\n  \"Beast\",\r\n  \"Beast-Warrior\",\r\n  \"Dinosaur\",\r\n  \"Divine-Beast\",\r\n  \"Dragon\",\r\n  \"Fairy\",\r\n  \"Fiend\",\r\n  \"Fish\",\r\n  \"Insect\",\r\n  \"Machine\",\r\n  \"Plant\",\r\n  \"Psychic\",\r\n  \"Pyro\",\r\n  \"Reptile\",\r\n  \"Rock\",\r\n  \"Sea-Serpent\",\r\n  \"Spellcaster\",\r\n  \"Thunder\",\r\n  \"Warrior\",\r\n  \"Winged-Beast\",\r\n  \"Zombie\",\r\n].sort();\r\nconst monsterTypeArr = [\"Normal\", \"Effect\", \"Ritual\", \"Fusion\", \"Synchro\"];\r\nconst monsterAttributeArr = [\r\n  \"Dark\",\r\n  \"Light\",\r\n  \"Wind\",\r\n  \"Earth\",\r\n  \"Fire\",\r\n  \"Water\",\r\n  \"Divine\",\r\n].sort();\r\n// spell cards\r\nconst spellTypeArr = [\r\n  \"Normal\",\r\n  \"Quick\",\r\n  \"Equip\",\r\n  \"Continuous\",\r\n  \"Field\",\r\n  \"Ritual\",\r\n];\r\n\r\n// trap cards\r\nconst trapTypeArr = [\"Normal\", \"Counter\", \"Continuous\"];\r\n\r\nexport {\r\n  monsterTypeArr,\r\n  monsterRaceArr,\r\n  monsterAttributeArr,\r\n  spellTypeArr,\r\n  trapTypeArr,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/NormalMonster.5ade83a9.webp\";","export default __webpack_public_path__ + \"static/media/EffectMonster.8daade47.webp\";","export default __webpack_public_path__ + \"static/media/FusionMonster.d18b6f4d.webp\";","export default __webpack_public_path__ + \"static/media/RitualMonster.e0908423.webp\";","export default __webpack_public_path__ + \"static/media/SynchroMonster.73d3acd4.webp\";","export default __webpack_public_path__ + \"static/media/Fire.56814d23.webp\";","export default __webpack_public_path__ + \"static/media/Dark.76728d12.webp\";","export default __webpack_public_path__ + \"static/media/Water.3eea82e9.webp\";","export default __webpack_public_path__ + \"static/media/Light.2eaf18b2.webp\";","export default __webpack_public_path__ + \"static/media/Earth.d460f49f.webp\";","export default __webpack_public_path__ + \"static/media/Wind.681d445a.webp\";","export default __webpack_public_path__ + \"static/media/Divine.5edc3004.webp\";","export default __webpack_public_path__ + \"static/media/Star.802e7ce2.webp\";","function dataURLtoFile(dataurl, filename) {\r\n  var arr = dataurl.split(\",\"),\r\n    mime = arr[0].match(/:(.*?);/)[1],\r\n    bstr = atob(arr[1]),\r\n    n = bstr.length,\r\n    u8arr = new Uint8Array(n);\r\n  while (n--) {\r\n    u8arr[n] = bstr.charCodeAt(n);\r\n  }\r\n  return new File([u8arr], filename, { type: mime });\r\n}\r\n\r\nexport default dataURLtoFile;\r\n","import React from \"react\";\r\n\r\nfunction ErrorMessage({ error }) {\r\n  return <div className=\"text-red-500 text-md text-center\">{error}</div>;\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import { React, useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport {\r\n  monsterTypeArr,\r\n  monsterAttributeArr,\r\n  monsterRaceArr,\r\n} from \"../card_meta_data/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport NormalMonster from \"../cards_img/monster_cards/NormalMonster.webp\";\r\nimport EffectMonster from \"../cards_img/monster_cards/EffectMonster.webp\";\r\nimport FusionMonster from \"../cards_img/monster_cards/FusionMonster.webp\";\r\nimport RitualMonster from \"../cards_img/monster_cards/RitualMonster.webp\";\r\nimport SynchroMonster from \"../cards_img/monster_cards/SynchroMonster.webp\";\r\nimport Fire from \"../cards_img/monsterAttrib/Fire.webp\";\r\nimport Dark from \"../cards_img/monsterAttrib/Dark.webp\";\r\nimport Water from \"../cards_img/monsterAttrib/Water.webp\";\r\nimport Light from \"../cards_img/monsterAttrib/Light.webp\";\r\nimport Earth from \"../cards_img/monsterAttrib/Earth.webp\";\r\nimport Wind from \"../cards_img/monsterAttrib/Wind.webp\";\r\nimport Divine from \"../cards_img/monsterAttrib/Divine.webp\";\r\nimport Star from \"../cards_img/Star.webp\";\r\nimport dataURLtoFile from \"../cards_img/dataUrlToFile\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/solid\";\r\nimport ErrorMessage from \"../Components/ErrorMessage\";\r\n\r\nfunction MonsterCardEdit() {\r\n  const { card_id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const { editMonsterCard } = bindActionCreators(actionCreators, dispatch);\r\n  const monsterImgContainer = useRef(null);\r\n\r\n  const regex = /^[A-Za-z0-9 .,!-]*$/;\r\n\r\n  const history = useHistory();\r\n  //error messages\r\n  const [monsterEffDescError, setMonsterEffDescError] = useState(undefined);\r\n  const [monsterNameError, setMonsterNameError] = useState(undefined);\r\n  const [selectedImageError, setSelectedImageError] = useState(undefined);\r\n\r\n  const [file, setFile] = useState(undefined);\r\n  const [selectedImage, setSelectedImage] = useState({});\r\n  const [monsterImage, setMonsterImage] = useState(\"\");\r\n  const [monsterName, setMonsterName] = useState(\"\");\r\n  const [cardType, setCardType] = useState(\"Monster\");\r\n  const [monsterType, setMonsterType] = useState(\"Normal\");\r\n  const [monsterRace, setMonsterRace] = useState(monsterRaceArr[0]);\r\n  const [monsterIsNormal, setMonsterIsNormal] = useState(true);\r\n  const [monsterEffDesc, setMonsterEffDesc] = useState(\"\");\r\n  const [monsterAttribute, setMonsterAttribute] = useState(\"Dark\");\r\n  const [monsterStar, setMonsterStar] = useState(1);\r\n  const [monsterAttack, setMonsterAttack] = useState(0);\r\n  const [monsterDefense, setMonsterDefense] = useState(0);\r\n  const [cardAuthor, setCardAuthor] = useState(\"\");\r\n  const [convertedImage, setConvertedImage] = useState(\"\");\r\n\r\n  // get card on load\r\n  useEffect(() => {\r\n    const fetchCardInfo = async () => {\r\n      const { data } = await axios.get(\"/api/cards/monsters/\" + card_id);\r\n\r\n      setMonsterImage(data.MonsterImage);\r\n      setMonsterName(data.MonsterName);\r\n      setCardType(data.CardType);\r\n      setMonsterType(data.MonsterType);\r\n      setMonsterRace(data.MonsterRace);\r\n      setMonsterIsNormal(data.MonsterIsNormal);\r\n      setMonsterEffDesc(data.MonsterEffDesc);\r\n      setMonsterAttribute(data.MonsterAttribute);\r\n      setMonsterStar(data.MonsterStar);\r\n      setMonsterAttack(data.MonsterAttack);\r\n      setMonsterDefense(data.MonsterDefense);\r\n      setCardAuthor(data.CardAuthor);\r\n      setConvertedImage(data.ConvertedImage);\r\n    };\r\n\r\n    fetchCardInfo();\r\n  }, [card_id]);\r\n\r\n  const editMonsterCardForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    convertDomToImg();\r\n  };\r\n\r\n  const convertDomToImg = () => {\r\n    domtoimage\r\n      .toPng(monsterImgContainer.current)\r\n      .then(function (dataUrl) {\r\n        const fileData = dataURLtoFile(dataUrl, \"monsterImg.png\");\r\n\r\n        if (monsterName.length === 0) {\r\n          setMonsterNameError(\"Monster Name is required!\");\r\n          return;\r\n        }\r\n\r\n        if (monsterEffDesc.length === 0) {\r\n          setMonsterEffDescError(\"Monster Description is required!\");\r\n          return;\r\n        }\r\n\r\n        const monsterCard = {\r\n          _id: card_id,\r\n          MonsterImage: monsterImage,\r\n          MonsterName: monsterName,\r\n          CardType: cardType,\r\n          MonsterType: monsterType,\r\n          MonsterRace: monsterRace,\r\n          MonsterIsNormal: monsterIsNormal,\r\n          MonsterEffDesc: monsterEffDesc,\r\n          MonsterAttribute: monsterAttribute,\r\n          MonsterStar: monsterStar,\r\n          MonsterAttack: monsterAttack,\r\n          MonsterDefense: monsterDefense,\r\n          CardAuthor: cardAuthor,\r\n          ConvertedImage: convertedImage,\r\n        };\r\n\r\n        editMonsterCard({ monsterCard, selectedImage, fileData });\r\n\r\n        history.push(\"/monsters/\" + card_id);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  const imageChangeHandler = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSelectedImage(e.target.files[0]);\r\n      setFile(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const selectMonsterTypeImg = () => {\r\n    if (monsterType === \"Normal\") return NormalMonster;\r\n    if (monsterType === \"Effect\") return EffectMonster;\r\n    if (monsterType === \"Fusion\") return FusionMonster;\r\n    if (monsterType === \"Ritual\") return RitualMonster;\r\n    if (monsterType === \"Synchro\") return SynchroMonster;\r\n  };\r\n\r\n  const selectMonsterAttributeImg = () => {\r\n    if (monsterAttribute === \"Fire\") return Fire;\r\n    if (monsterAttribute === \"Wind\") return Wind;\r\n    if (monsterAttribute === \"Water\") return Water;\r\n    if (monsterAttribute === \"Dark\") return Dark;\r\n    if (monsterAttribute === \"Light\") return Light;\r\n    if (monsterAttribute === \"Divine\") return Divine;\r\n    if (monsterAttribute === \"Earth\") return Earth;\r\n  };\r\n\r\n  const selectMonsterAttributeClassName = () => {\r\n    if (selectMonsterAttributeImg() === Earth) return \"Earth\";\r\n    if (selectMonsterAttributeImg() === Fire) return \"Fire\";\r\n    if (selectMonsterAttributeImg() === Wind) return \"Wind\";\r\n    if (selectMonsterAttributeImg() === Water) return \"Water\";\r\n    if (selectMonsterAttributeImg() === Dark) return \"Dark\";\r\n    if (selectMonsterAttributeImg() === Light) return \"Light\";\r\n    if (selectMonsterAttributeImg() === Divine) return \"Divine\";\r\n  };\r\n\r\n  const setMonsterTypeHandler = (e) => {\r\n    setMonsterType(e.target.value);\r\n    if (\r\n      e.target.value === \"Normal\" &&\r\n      e.target.value !== \"Fusion\" &&\r\n      e.target.value !== \"Ritual\" &&\r\n      e.target.value !== \"Synchro\"\r\n    ) {\r\n      setMonsterIsNormal(true);\r\n    } else {\r\n      setMonsterIsNormal(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMonsterStarHandler();\r\n  }, [monsterStar]);\r\n\r\n  const setMonsterStarHandler = () => {\r\n    let array = [];\r\n    for (let i = 0; i < monsterStar; i++) {\r\n      array.push(i);\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  const setMonsterNameHandler = (e) => {\r\n    if (e.target.value.length > 20) {\r\n      setMonsterNameError(\"Characters shouldn't exceed in 20\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setMonsterName(e.target.value);\r\n      setMonsterNameError(undefined);\r\n    } else {\r\n      setMonsterName(e.target.value);\r\n      setMonsterNameError(\"Monster Name is invalid!\");\r\n    }\r\n  };\r\n\r\n  const setMonsterEffDescHandler = (e) => {\r\n    if (e.target.value.length > 158) {\r\n      setMonsterEffDescError(\"Characters shouldn't exceed in 158\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setMonsterEffDesc(e.target.value);\r\n      setMonsterEffDescError(undefined);\r\n    } else {\r\n      setMonsterEffDesc(e.target.value);\r\n      setMonsterEffDescError(\"Monster Effect is invalid!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Edit Monster Card\" />\r\n      <div className=\"add-card-form-container\">\r\n        <form onSubmit={editMonsterCardForm} className=\"add-card-form\">\r\n          <div className=\"flex w-full items-center justify-center\">\r\n            <label className=\"w-64 flex flex-col items-center px-4 py-6 text-green-400 rounded-lg tracking-wide uppercase border border-green-400 cursor-pointer hover:bg-green-400 hover:text-gray-100\">\r\n              <svg\r\n                className=\"w-8 h-8\"\r\n                fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n              </svg>\r\n              <span className=\"mt-2 text-base leading-normal\">\r\n                {selectedImage.name ? selectedImage.name : \"Select new image\"}\r\n              </span>\r\n              <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                name=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={imageChangeHandler}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Name: </label>\r\n            <input\r\n              value={monsterName}\r\n              onChange={setMonsterNameHandler}\r\n              required\r\n              className=\"add-card-input-textbox\"\r\n              placeholder=\"Monster Name\"\r\n            />\r\n            {monsterNameError ? <ErrorMessage error={monsterNameError} /> : \"\"}\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Type: </label>\r\n            <select\r\n              onChange={setMonsterTypeHandler}\r\n              value={monsterType}\r\n              className=\"add-card-select\"\r\n            >\r\n              {monsterTypeArr.map((type) => (\r\n                <option key={type} value={type} className=\"add-card-option\">\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Race: </label>\r\n            <select\r\n              onChange={(e) => setMonsterRace(e.target.value)}\r\n              value={monsterRace}\r\n              className=\"add-card-select\"\r\n            >\r\n              {monsterRaceArr.map((race) => (\r\n                <option key={race} value={race} className=\"add-card-option\">\r\n                  {race}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {monsterType === \"Normal\" || monsterType === \"Effect\" ? (\r\n            \"\"\r\n          ) : (\r\n            <div className=\"flex w-10/12 mx-auto justify-around my-2\">\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"isNormal\"\r\n                  name=\"isNormal\"\r\n                  value=\"Normal\"\r\n                  checked={monsterIsNormal === true}\r\n                  onChange={() => setMonsterIsNormal(true)}\r\n                  className=\"mr-1\"\r\n                />\r\n                <label htmlFor=\"isNormal\">Normal</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"isEffect\"\r\n                  name=\"isNormal\"\r\n                  value=\"Effect\"\r\n                  checked={monsterIsNormal === false}\r\n                  onChange={() => setMonsterIsNormal(false)}\r\n                  className=\"mr-1\"\r\n                />\r\n                <label htmlFor=\"isEffect\">Effect</label>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <label className=\"add-card-input-label\">\r\n              {monsterIsNormal ? \"Description\" : \"Effect\"}:{\" \"}\r\n            </label>\r\n            <textarea\r\n              value={monsterEffDesc}\r\n              onChange={setMonsterEffDescHandler}\r\n              row=\"4\"\r\n              col=\"50\"\r\n              required\r\n              className=\"add-card-textarea\"\r\n            ></textarea>\r\n            {monsterEffDescError ? (\r\n              <ErrorMessage error={monsterEffDescError} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"add-card-input-label\">Attribute: </label>\r\n            <select\r\n              onChange={(e) => setMonsterAttribute(e.target.value)}\r\n              value={monsterAttribute}\r\n              className=\"add-card-select\"\r\n            >\r\n              {monsterAttributeArr.map((attri) => (\r\n                <option key={attri} value={attri} className=\"add-card-option\">\r\n                  {attri}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Level: </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"12\"\r\n              value={monsterStar}\r\n              onChange={(e) => setMonsterStar(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Attack: </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"10000\"\r\n              value={monsterAttack}\r\n              onChange={(e) =>\r\n                setMonsterAttack(monsterAttack < 1001 ? e.target.value : 0)\r\n              }\r\n              className=\"add-card-select\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Defense: </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"10000\"\r\n              value={monsterDefense}\r\n              onChange={(e) =>\r\n                setMonsterDefense(monsterDefense < 1001 ? e.target.value : 0)\r\n              }\r\n              className=\"add-card-select\"\r\n            />\r\n          </div>\r\n          <button\r\n            className={\r\n              monsterNameError || monsterEffDescError\r\n                ? \"add-card-btn-disabled\"\r\n                : \"add-card-btn\"\r\n            }\r\n            disabled={monsterNameError || monsterEffDescError ? true : false}\r\n          >\r\n            <CheckCircleIcon className=\"CheckCircleIconStyles\" />\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <div className=\"add-card-converted\">\r\n          <div className=\"card-container\" ref={monsterImgContainer}>\r\n            <img src={selectMonsterTypeImg()} className=\"card\" />\r\n            <div className=\"monster-card-name\">{monsterName}</div>\r\n            <img\r\n              className={\r\n                \"monster-card-attribute \" + selectMonsterAttributeClassName()\r\n              }\r\n              src={selectMonsterAttributeImg()}\r\n            />\r\n            {\r\n              <div className=\"spell-card-img-container\">\r\n                <img\r\n                  className=\"monster-card-img\"\r\n                  alt=\"Monster\"\r\n                  src={file ? file : \"/image/\" + monsterImage}\r\n                />\r\n              </div>\r\n            }\r\n            <div className=\"monster-card-star-container\">\r\n              {setMonsterStarHandler().map((key) => (\r\n                <img src={Star} className=\"monster-card-star\" key={key} />\r\n              ))}\r\n            </div>\r\n            <div className=\"monster-card-race\">\r\n              [{monsterRace}\r\n              {monsterIsNormal ? \"\" : \"/Effect\"}]\r\n            </div>\r\n            <div className=\"monster-card-eff\">{monsterEffDesc}</div>\r\n            <div className=\"monster-card-attack\">{monsterAttack}</div>\r\n            <div className=\"monster-card-defense\">{monsterDefense}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MonsterCardEdit;\r\n","import { React, useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport {\r\n  monsterTypeArr,\r\n  monsterAttributeArr,\r\n  monsterRaceArr,\r\n} from \"../card_meta_data/index\";\r\nimport NormalMonster from \"../cards_img/monster_cards/NormalMonster.webp\";\r\nimport EffectMonster from \"../cards_img/monster_cards/EffectMonster.webp\";\r\nimport FusionMonster from \"../cards_img/monster_cards/FusionMonster.webp\";\r\nimport RitualMonster from \"../cards_img/monster_cards/RitualMonster.webp\";\r\nimport SynchroMonster from \"../cards_img/monster_cards/SynchroMonster.webp\";\r\nimport Fire from \"../cards_img/monsterAttrib/Fire.webp\";\r\nimport Dark from \"../cards_img/monsterAttrib/Dark.webp\";\r\nimport Water from \"../cards_img/monsterAttrib/Water.webp\";\r\nimport Light from \"../cards_img/monsterAttrib/Light.webp\";\r\nimport Earth from \"../cards_img/monsterAttrib/Earth.webp\";\r\nimport Wind from \"../cards_img/monsterAttrib/Wind.webp\";\r\nimport Divine from \"../cards_img/monsterAttrib/Divine.webp\";\r\nimport Star from \"../cards_img/Star.webp\";\r\nimport dataURLtoFile from \"../cards_img/dataUrlToFile\";\r\n\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/solid\";\r\nimport ErrorMessage from \"../Components/ErrorMessage\";\r\n\r\nfunction AddMonsterCardPage() {\r\n  const dispatch = useDispatch();\r\n  const { addMonsterCard } = bindActionCreators(actionCreators, dispatch);\r\n  const monsterImgContainer = useRef(null);\r\n  const regex = /^[A-Za-z0-9 .,!-]*$/;\r\n\r\n  const { loginUser, monsterCard } = useSelector((state) => state);\r\n  const history = useHistory();\r\n\r\n  const [monstersLength, setMonstersLength] = useState(\r\n    monsterCard.monsterCards.length\r\n  );\r\n\r\n  const [file, setFile] = useState(undefined);\r\n  const [selectedImage, setSelectedImage] = useState({});\r\n  const [monsterName, setMonsterName] = useState(\"\");\r\n  const [cardType] = useState(\"Monster\");\r\n  const [monsterRace, setMonsterRace] = useState(monsterRaceArr[0]);\r\n  const [monsterType, setMonsterType] = useState(\"Normal\");\r\n  const [monsterEffDesc, setMonsterEffDesc] = useState(\"\");\r\n  const [monsterIsNormal, setMonsterIsNormal] = useState(true);\r\n  const [monsterAttribute, setMonsterAttribute] = useState(\"Dark\");\r\n  const [monsterStar, setMonsterStar] = useState(1);\r\n  const [monsterAttack, setMonsterAttack] = useState(0);\r\n  const [monsterDefense, setMonsterDefense] = useState(0);\r\n  const [cardAuthor] = useState(loginUser.credentials.username);\r\n\r\n  // error messages\r\n  const [monsterEffDescError, setMonsterEffDescError] = useState(undefined);\r\n  const [monsterNameError, setMonsterNameError] = useState(undefined);\r\n  const [selectedImageError, setSelectedImageError] = useState(undefined);\r\n\r\n  const addMonsterCardForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    convertDomToImg();\r\n  };\r\n\r\n  const imageChangeHandler = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSelectedImage(e.target.files[0]);\r\n      setFile(URL.createObjectURL(e.target.files[0]));\r\n      setSelectedImageError(undefined);\r\n    }\r\n  };\r\n\r\n  const selectMonsterTypeImg = () => {\r\n    if (monsterType === \"Normal\") return NormalMonster;\r\n    if (monsterType === \"Effect\") return EffectMonster;\r\n    if (monsterType === \"Fusion\") return FusionMonster;\r\n    if (monsterType === \"Ritual\") return RitualMonster;\r\n    if (monsterType === \"Synchro\") return SynchroMonster;\r\n  };\r\n\r\n  const selectMonsterAttributeImg = () => {\r\n    if (monsterAttribute === \"Fire\") return Fire;\r\n    if (monsterAttribute === \"Wind\") return Wind;\r\n    if (monsterAttribute === \"Water\") return Water;\r\n    if (monsterAttribute === \"Dark\") return Dark;\r\n    if (monsterAttribute === \"Light\") return Light;\r\n    if (monsterAttribute === \"Divine\") return Divine;\r\n    if (monsterAttribute === \"Earth\") return Earth;\r\n  };\r\n\r\n  const selectMonsterAttributeClassName = () => {\r\n    if (selectMonsterAttributeImg() === Earth) return \"Earth\";\r\n    if (selectMonsterAttributeImg() === Fire) return \"Fire\";\r\n    if (selectMonsterAttributeImg() === Wind) return \"Wind\";\r\n    if (selectMonsterAttributeImg() === Water) return \"Water\";\r\n    if (selectMonsterAttributeImg() === Dark) return \"Dark\";\r\n    if (selectMonsterAttributeImg() === Light) return \"Light\";\r\n    if (selectMonsterAttributeImg() === Divine) return \"Divine\";\r\n  };\r\n\r\n  const setMonsterTypeHandler = (e) => {\r\n    setMonsterType(e.target.value);\r\n    if (\r\n      e.target.value === \"Normal\" &&\r\n      e.target.value !== \"Fusion\" &&\r\n      e.target.value !== \"Ritual\" &&\r\n      e.target.value !== \"Synchro\"\r\n    ) {\r\n      setMonsterIsNormal(true);\r\n    } else {\r\n      setMonsterIsNormal(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setMonsterStarHandler();\r\n  }, [monsterStar]);\r\n\r\n  useEffect(() => {\r\n    setMonstersLength(monsterCard.monsterCards.length);\r\n  }, [monsterCard.monsterCards.length]);\r\n\r\n  const setMonsterStarHandler = () => {\r\n    let array = [];\r\n    for (let i = 0; i < monsterStar; i++) {\r\n      array.push(i);\r\n    }\r\n\r\n    return array;\r\n  };\r\n\r\n  const convertDomToImg = () => {\r\n    domtoimage\r\n      .toPng(monsterImgContainer.current)\r\n      .then(function (dataUrl) {\r\n        const fileData = dataURLtoFile(dataUrl, \"monsterImg.png\");\r\n\r\n        if (monsterName.length === 0) {\r\n          setMonsterNameError(\"Monster Name is required!\");\r\n          return;\r\n        }\r\n\r\n        if (monsterEffDesc.length === 0) {\r\n          setMonsterEffDescError(\"Monster Description is required!\");\r\n          return;\r\n        }\r\n\r\n        if (!selectedImage.name) {\r\n          setSelectedImageError(\"Monster Image is required!\");\r\n          alert(\"Please select image for the card.\");\r\n          return;\r\n        }\r\n        const monsterCard = {\r\n          MonsterName: monsterName,\r\n          CardType: cardType,\r\n          MonsterType: monsterType,\r\n          MonsterRace: monsterRace,\r\n          MonsterIsNormal: monsterIsNormal,\r\n          MonsterEffDesc: monsterEffDesc,\r\n          MonsterAttribute: monsterAttribute,\r\n          MonsterStar: monsterStar,\r\n          MonsterAttack: monsterAttack,\r\n          MonsterDefense: monsterDefense,\r\n          CardAuthor: cardAuthor,\r\n        };\r\n\r\n        addMonsterCard({ monsterCard, selectedImage, fileData });\r\n\r\n        history.push(\"/monsters\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  const setMonsterNameHandler = (e) => {\r\n    if (e.target.value.length > 20) {\r\n      setMonsterNameError(\"Characters shouldn't exceed in 20\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setMonsterName(e.target.value);\r\n      setMonsterNameError(undefined);\r\n    } else {\r\n      setMonsterName(e.target.value);\r\n      setMonsterNameError(\"Monster Name is invalid!\");\r\n    }\r\n  };\r\n\r\n  const setMonsterEffDescHandler = (e) => {\r\n    if (e.target.value.length > 158) {\r\n      setMonsterEffDescError(\"Characters shouldn't exceed in 158\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setMonsterEffDesc(e.target.value);\r\n      setMonsterEffDescError(undefined);\r\n    } else {\r\n      setMonsterEffDesc(e.target.value);\r\n      setMonsterEffDescError(\"MonsterEffect is invalid!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Add Monster\" />\r\n      <div className=\"add-card-form-container\">\r\n        <form\r\n          onSubmit={addMonsterCardForm}\r\n          encType=\"multipart/form-data\"\r\n          className=\"add-card-form\"\r\n        >\r\n          <div className=\"flex w-full items-center justify-center\">\r\n            <label className=\"w-64 flex flex-col items-center px-4 py-6 text-green-400 rounded-lg tracking-wide uppercase border border-green-400 cursor-pointer hover:bg-green-400 hover:text-gray-100\">\r\n              <svg\r\n                className=\"w-8 h-8\"\r\n                fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n              </svg>\r\n              <span className=\"mt-2 text-base leading-normal\">\r\n                {selectedImage.name ? selectedImage.name : \"Select image\"}\r\n              </span>\r\n              <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                name=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={imageChangeHandler}\r\n              />\r\n            </label>\r\n          </div>\r\n          {selectedImageError ? (\r\n            <ErrorMessage error={selectedImageError} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div>\r\n            <label className=\"add-card-input-label\">Name: </label>\r\n            <input\r\n              value={monsterName}\r\n              onChange={setMonsterNameHandler}\r\n              required\r\n              className=\"add-card-input-textbox\"\r\n              placeholder=\"Monster Name\"\r\n            />\r\n            {monsterNameError ? <ErrorMessage error={monsterNameError} /> : \"\"}\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Type:</label>\r\n            <select\r\n              onChange={setMonsterTypeHandler}\r\n              className=\"add-card-select\"\r\n            >\r\n              {monsterTypeArr.map((type) => (\r\n                <option key={type} value={type} className=\"add-card-option\">\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Race:</label>\r\n            <select\r\n              onChange={(e) => setMonsterRace(e.target.value)}\r\n              className=\"add-card-select\"\r\n            >\r\n              {monsterRaceArr.map((race) => (\r\n                <option key={race} value={race} className=\"add-card-option\">\r\n                  {race}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {monsterType === \"Normal\" || monsterType === \"Effect\" ? (\r\n            \"\"\r\n          ) : (\r\n            <div className=\"flex w-10/12 mx-auto justify-around my-2\">\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"isNormal\"\r\n                  name=\"isNormal\"\r\n                  value=\"Normal\"\r\n                  checked={monsterIsNormal === true}\r\n                  onChange={() => setMonsterIsNormal(true)}\r\n                  className=\"mr-1\"\r\n                />\r\n                <label htmlFor=\"isNormal\">Normal</label>\r\n              </div>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  id=\"isEffect\"\r\n                  name=\"isNormal\"\r\n                  value=\"Effect\"\r\n                  checked={monsterIsNormal === false}\r\n                  onChange={() => setMonsterIsNormal(false)}\r\n                  className=\"mr-1\"\r\n                />\r\n                <label htmlFor=\"isEffect\">Effect</label>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div>\r\n            <label className=\"add-card-input-label\">\r\n              {monsterIsNormal ? \"Description\" : \"Effect\"}:{\" \"}\r\n            </label>\r\n            <textarea\r\n              value={monsterEffDesc}\r\n              onChange={setMonsterEffDescHandler}\r\n              row=\"4\"\r\n              col=\"50\"\r\n              required\r\n              className=\"add-card-textarea\"\r\n            ></textarea>\r\n            {monsterEffDescError ? (\r\n              <ErrorMessage error={monsterEffDescError} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"add-card-input-label\">Attribute: </label>\r\n            <select\r\n              onChange={(e) => setMonsterAttribute(e.target.value)}\r\n              className=\"add-card-select\"\r\n            >\r\n              {monsterAttributeArr.map((attri) => (\r\n                <option key={attri} value={attri} className=\"add-card-option\">\r\n                  {attri}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Level: </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"12\"\r\n              value={monsterStar}\r\n              onChange={(e) => setMonsterStar(e.target.value)}\r\n              className=\"add-card-select\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Attack: </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"10000\"\r\n              value={monsterAttack}\r\n              onChange={(e) =>\r\n                setMonsterAttack(monsterAttack < 1001 ? e.target.value : 0)\r\n              }\r\n              className=\"add-card-select\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Defense: </label>\r\n            <input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              max=\"10000\"\r\n              value={monsterDefense}\r\n              onChange={(e) =>\r\n                setMonsterDefense(monsterDefense < 1001 ? e.target.value : 0)\r\n              }\r\n              className=\"add-card-select\"\r\n            />\r\n          </div>\r\n          <button\r\n            className={\r\n              monsterNameError || monsterEffDescError\r\n                ? \"add-card-btn-disabled\"\r\n                : \"add-card-btn\"\r\n            }\r\n            disabled={monsterNameError || monsterEffDescError ? true : false}\r\n          >\r\n            <CheckCircleIcon className=\"CheckCircleIconStyles\" /> Submit\r\n          </button>\r\n        </form>\r\n        <div className=\"add-card-converted\" ref={monsterImgContainer}>\r\n          <div className=\"card-container\">\r\n            <img src={selectMonsterTypeImg()} className=\"card\" />\r\n            <div className=\"monster-card-name\">{monsterName}</div>\r\n            <img\r\n              className={\r\n                \"monster-card-attribute \" + selectMonsterAttributeClassName()\r\n              }\r\n              src={selectMonsterAttributeImg()}\r\n            />\r\n            {file && (\r\n              <div className=\"spell-card-img-container\">\r\n                <img className=\"monster-card-img\" alt=\"Monster\" src={file} />\r\n              </div>\r\n            )}\r\n            <div className=\"monster-card-star-container\">\r\n              {setMonsterStarHandler().map((key) => (\r\n                <img src={Star} className=\"monster-card-star\" key={key} />\r\n              ))}\r\n            </div>\r\n            <div className=\"monster-card-race\">\r\n              [{monsterRace}\r\n              {monsterIsNormal ? \"\" : \"/Effect\"}]\r\n            </div>\r\n            <div className=\"monster-card-eff\">{monsterEffDesc}</div>\r\n            <div className=\"monster-card-attack\">{monsterAttack}</div>\r\n            <div className=\"monster-card-defense\">{monsterDefense}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddMonsterCardPage;\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport { EyeIcon, XIcon } from \"@heroicons/react/solid\";\r\n\r\nfunction SpellCardCard({ cardInfo }) {\r\n  const dispatch = useDispatch();\r\n  const { deleteSpellCard } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const deleteHandler = () => {\r\n    deleteSpellCard(cardInfo._id);\r\n  };\r\n  return (\r\n    <div className=\"card-card-container\">\r\n      <img\r\n        alt=\"Spell\"\r\n        src={\"/image/\" + cardInfo.SpellImage}\r\n        className=\"card-card-image\"\r\n      />\r\n      <div className=\"card-details-container\">\r\n        <p className=\"card-card-name\">{cardInfo.SpellName}</p>\r\n        <p>{cardInfo.SpellType} Spell</p>\r\n        <div className=\"card-btn-container\">\r\n          <button className=\"view-card-btn\">\r\n            <EyeIcon className=\"EyeIconStyles\" />\r\n            <Link to={\"/spells/\" + cardInfo._id}>View</Link>\r\n          </button>\r\n          <button className=\"delete-card-btn\" onClick={deleteHandler}>\r\n            <XIcon className=\"XIconStyles\" /> Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpellCardCard;\r\n","import { useEffect, React } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport SpellCardCard from \"../Components/SpellCardCard\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { PlusCircleIcon } from \"@heroicons/react/solid\";\r\nimport Loading from \"../Components/Loading\";\r\nimport CardIsEmpty from \"../Components/CardIsEmpty\";\r\n\r\nfunction SpellCardPage() {\r\n  const dispatch = useDispatch();\r\n  const { fetchAllSpells } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const state = useSelector((state) => state.spellCard);\r\n\r\n  useEffect(() => {\r\n    fetchAllSpells();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Your Spell Cards\" />\r\n      <button className=\"add-card-btn\">\r\n        <PlusCircleIcon className=\"PlusCircleIconStyles\" />\r\n        <NavLink to=\"/spells/add\">Add Spell Card</NavLink>\r\n      </button>\r\n\r\n      {state.loading ? (\r\n        <Loading />\r\n      ) : state.error === \"\" ? (\r\n        state.spellCards.length !== 0 ? (\r\n          state.spellCards.map((card) => (\r\n            <SpellCardCard cardInfo={card} key={card._id} />\r\n          ))\r\n        ) : (\r\n          <CardIsEmpty card=\"Spell\" />\r\n        )\r\n      ) : (\r\n        <p>{state.error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpellCardPage;\r\n","export default __webpack_public_path__ + \"static/media/NormalSpell.1fa9690c.webp\";","export default __webpack_public_path__ + \"static/media/FieldSpell.2db4be93.webp\";","export default __webpack_public_path__ + \"static/media/EquipSpell.cc37b221.webp\";","export default __webpack_public_path__ + \"static/media/QuickSpell.68a64b24.webp\";","export default __webpack_public_path__ + \"static/media/RitualSpell.d20eaa0a.webp\";","export default __webpack_public_path__ + \"static/media/ContinuousSpell.1a50272a.webp\";","import domtoimage from \"dom-to-image\";\r\nimport { React, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport { spellTypeArr } from \"../card_meta_data/index\";\r\nimport NormalSpell from \"../cards_img/NormalSpell.webp\";\r\nimport FieldSpell from \"../cards_img/FieldSpell.webp\";\r\nimport EquipSpell from \"../cards_img/EquipSpell.webp\";\r\nimport QuickSpell from \"../cards_img/QuickSpell.webp\";\r\nimport RitualSpell from \"../cards_img/RitualSpell.webp\";\r\nimport ContinuousSpell from \"../cards_img/ContinuousSpell.webp\";\r\nimport dataURLtoFile from \"../cards_img/dataUrlToFile\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/solid\";\r\nimport ErrorMessage from \"../Components/ErrorMessage\";\r\n\r\nfunction AddSpellCardPage() {\r\n  const dispatch = useDispatch();\r\n  const spellImgContainer = useRef(null);\r\n  const regex = /^[A-Za-z0-9 .,!-]*$/;\r\n\r\n  const { addSpellCard } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const history = useHistory();\r\n\r\n  const { loginUser } = useSelector((state) => state);\r\n\r\n  const [selectedImageError, setSelectedImageError] = useState(undefined);\r\n  const [spellNameError, setSpellNameError] = useState(undefined);\r\n  const [spellEffError, setSpellEffError] = useState(undefined);\r\n\r\n  const [file, setFile] = useState(undefined);\r\n  const [selectedImage, setSelectedImage] = useState({});\r\n  const [spellName, setSpellName] = useState(\"\");\r\n  const [spellEff, setSpellEff] = useState(\"\");\r\n  const [spellType, setSpellType] = useState(\"Normal\");\r\n  const [cardType] = useState(\"Spell\");\r\n  const [cardAuthor] = useState(loginUser.credentials.username);\r\n\r\n  const addSpellCardForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    convertDomToImg();\r\n  };\r\n\r\n  const imageChangeHandler = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSelectedImage(e.target.files[0]);\r\n      setFile(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const selectSpellTypeImg = () => {\r\n    if (spellType === \"Normal\") return NormalSpell;\r\n    if (spellType === \"Continuous\") return ContinuousSpell;\r\n    if (spellType === \"Equip\") return EquipSpell;\r\n    if (spellType === \"Ritual\") return RitualSpell;\r\n    if (spellType === \"Field\") return FieldSpell;\r\n    if (spellType === \"Quick\") return QuickSpell;\r\n  };\r\n\r\n  const convertDomToImg = () => {\r\n    domtoimage\r\n      .toPng(spellImgContainer.current)\r\n      .then(function (dataUrl) {\r\n        const fileData = dataURLtoFile(dataUrl, \"spellImg.png\");\r\n\r\n        if (!selectedImage.name) {\r\n          setSelectedImageError(\"Spell Image is required!\");\r\n          alert(\"Please select image for the card.\");\r\n          return;\r\n        }\r\n\r\n        if (spellName.length === 0) {\r\n          setSpellNameError(\"Spell Name is required!\");\r\n          return;\r\n        }\r\n\r\n        if (spellEff.length === 0) {\r\n          setSpellEffError(\"Spell Effect is required!\");\r\n          return;\r\n        }\r\n\r\n        const spellCard = {\r\n          SpellName: spellName,\r\n          SpellEff: spellEff,\r\n          SpellType: spellType,\r\n          CardType: cardType,\r\n          CardAuthor: cardAuthor,\r\n        };\r\n\r\n        addSpellCard({ spellCard, selectedImage, fileData });\r\n\r\n        history.push(\"/spells\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  const setSpellNameHandler = (e) => {\r\n    if (e.target.value.length > 20) {\r\n      setSpellNameError(\"Characters shouldn't exceed in 20\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setSpellName(e.target.value);\r\n      setSpellNameError(undefined);\r\n    } else {\r\n      setSpellName(e.target.value);\r\n      setSpellNameError(\"Spell Name is invalid!\");\r\n    }\r\n  };\r\n\r\n  const setSpellEffHandler = (e) => {\r\n    if (e.target.value.length > 168) {\r\n      setSpellEffError(\"Characters shouldn't exceed in 168\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setSpellEff(e.target.value);\r\n      setSpellEffError(undefined);\r\n    } else {\r\n      setSpellEff(e.target.value);\r\n      setSpellEffError(\"Spell Effect is invalid!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Add Spell\" />\r\n      <div className=\"add-card-form-container\">\r\n        <form\r\n          onSubmit={addSpellCardForm}\r\n          encType=\"multipart/form-data\"\r\n          className=\"add-card-form\"\r\n        >\r\n          <div className=\"flex w-full items-center justify-center\">\r\n            <label className=\"w-64 flex flex-col items-center px-4 py-6 text-green-400 rounded-lg tracking-wide uppercase border border-green-400 cursor-pointer hover:bg-green-400 hover:text-gray-100\">\r\n              <svg\r\n                className=\"w-8 h-8\"\r\n                fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n              </svg>\r\n              <span className=\"mt-2 text-base leading-normal\">\r\n                {selectedImage.name ? selectedImage.name : \"Select image\"}\r\n              </span>\r\n              <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                name=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={imageChangeHandler}\r\n              />\r\n            </label>\r\n          </div>\r\n          {selectedImageError ? (\r\n            <ErrorMessage error={selectedImageError} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div>\r\n            <label className=\"add-card-label\">Spell Name: </label>\r\n            <input\r\n              value={spellName}\r\n              onChange={setSpellNameHandler}\r\n              className=\"add-card-input-textbox\"\r\n              placeholder=\"Spell Name\"\r\n            />\r\n            {spellNameError ? <ErrorMessage error={spellNameError} /> : \"\"}\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-label\">Spell Type: </label>\r\n            <select\r\n              onChange={(e) => setSpellType(e.target.value)}\r\n              className=\"add-card-select\"\r\n            >\r\n              {spellTypeArr.map((type) => (\r\n                <option key={type} value={type} className=\"add-card-option\">\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-label\">Effect: </label>\r\n            <textarea\r\n              value={spellEff}\r\n              onChange={setSpellEffHandler}\r\n              row=\"4\"\r\n              col=\"50\"\r\n              className=\"add-card-textarea\"\r\n            ></textarea>\r\n            {spellEffError ? <ErrorMessage error={spellEffError} /> : \"\"}\r\n          </div>\r\n          <button\r\n            className={\r\n              spellNameError || spellEffError\r\n                ? \"add-card-btn-disabled\"\r\n                : \"add-card-btn\"\r\n            }\r\n            disabled={spellNameError || spellEffError ? true : false}\r\n          >\r\n            <CheckCircleIcon className=\"CheckCircleIconStyles\" />\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <div className=\"add-card-converted\">\r\n          <div className=\"card-container\" ref={spellImgContainer}>\r\n            <img src={selectSpellTypeImg()} className=\"card\" />\r\n            <div className=\"spell-card-name\">{spellName}</div>\r\n            {file && (\r\n              <div className=\"spell-card-img-container\">\r\n                <img className=\"spell-card-img\" alt=\"Spell\" src={file} />\r\n              </div>\r\n            )}\r\n            <div className=\"spell-card-eff\">{spellEff}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddSpellCardPage;\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport downloadImage from \"../cards_img/downloadImage\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport Loading from \"../Components/Loading\";\r\nimport { DownloadIcon, PencilIcon } from \"@heroicons/react/solid\";\r\n\r\nfunction SpellCardView() {\r\n  const { card_id } = useParams();\r\n  const [cardInfo, setCardInfo] = useState([]);\r\n  const imgUrl = \"/image/\" + cardInfo.ConvertedImage;\r\n\r\n  // get card on load\r\n  useEffect(() => {\r\n    const fetchCardInfo = async () => {\r\n      const { data } = await axios.get(\"/api/cards/spells/\" + card_id);\r\n\r\n      setCardInfo(data);\r\n    };\r\n\r\n    fetchCardInfo();\r\n  }, [card_id]);\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title={cardInfo.SpellName} />\r\n      {cardInfo.length === 0 ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"view-card-container\">\r\n          <img\r\n            alt=\"Spell\"\r\n            src={\"/image/\" + cardInfo.ConvertedImage}\r\n            className=\"converted-image view-card-converted\"\r\n          />\r\n          <div className=\"view-card-btn-container\">\r\n            <button\r\n              onClick={() => {\r\n                downloadImage(imgUrl, cardInfo.SpellName);\r\n              }}\r\n              className=\"view-card-download-btn\"\r\n            >\r\n              <DownloadIcon className=\"DownloadIconStyles\" />\r\n              Download\r\n            </button>\r\n            <Link to={\"/spells/edit/\" + cardInfo._id}>\r\n              <button className=\"view-card-edit-btn\">\r\n                <PencilIcon className=\"PencilIconStyles\" />\r\n                Edit\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpellCardView;\r\n","import { React, useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { spellTypeArr } from \"../card_meta_data/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport NormalSpell from \"../cards_img/NormalSpell.webp\";\r\nimport FieldSpell from \"../cards_img/FieldSpell.webp\";\r\nimport EquipSpell from \"../cards_img/EquipSpell.webp\";\r\nimport QuickSpell from \"../cards_img/QuickSpell.webp\";\r\nimport RitualSpell from \"../cards_img/RitualSpell.webp\";\r\nimport ContinuousSpell from \"../cards_img/ContinuousSpell.webp\";\r\nimport dataURLtoFile from \"../cards_img/dataUrlToFile\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/solid\";\r\nimport ErrorMessage from \"../Components/ErrorMessage\";\r\n\r\nfunction SpellCardEdit() {\r\n  const { card_id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const spellImgContainer = useRef(null);\r\n  const { editSpellCard } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const regex = /^[A-Za-z0-9 .,!-]*$/;\r\n\r\n  const history = useHistory();\r\n\r\n  const [spellNameError, setSpellNameError] = useState(undefined);\r\n  const [spellEffError, setSpellEffError] = useState(undefined);\r\n\r\n  const [file, setFile] = useState(undefined);\r\n  const [selectedImage, setSelectedImage] = useState({});\r\n  const [spellImage, setSpellImage] = useState(\"\");\r\n  const [spellName, setSpellName] = useState(\"\");\r\n  const [spellType, setSpellType] = useState(\"\");\r\n  const [spellEff, setSpellEff] = useState(\"\");\r\n  const [cardType, setCardType] = useState(\"Spell\");\r\n  const [cardAuthor, setCardAuthor] = useState(\"\");\r\n  const [convertedImage, setConvertedImage] = useState(\"\");\r\n\r\n  // need to implement redux in app in order to maintain the data\r\n  // get card on load\r\n  useEffect(() => {\r\n    const fetchCardInfo = async () => {\r\n      const { data } = await axios.get(\"/api/cards/spells/\" + card_id);\r\n\r\n      setSpellImage(data.SpellImage);\r\n      setSpellName(data.SpellName);\r\n      setSpellType(data.SpellType);\r\n      setSpellEff(data.SpellEff);\r\n      setCardType(data.CardType);\r\n      setCardAuthor(data.CardAuthor);\r\n      setConvertedImage(data.ConvertedImage);\r\n    };\r\n\r\n    fetchCardInfo();\r\n  }, [card_id]);\r\n\r\n  const editSpellCardForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    convertDomToImg();\r\n  };\r\n\r\n  const imageChangeHandler = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSelectedImage(e.target.files[0]);\r\n      setFile(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const selectSpellTypeImg = () => {\r\n    if (spellType === \"Normal\") return NormalSpell;\r\n    if (spellType === \"Continuous\") return ContinuousSpell;\r\n    if (spellType === \"Equip\") return EquipSpell;\r\n    if (spellType === \"Ritual\") return RitualSpell;\r\n    if (spellType === \"Field\") return FieldSpell;\r\n    if (spellType === \"Quick\") return QuickSpell;\r\n  };\r\n\r\n  const convertDomToImg = () => {\r\n    domtoimage\r\n      .toPng(spellImgContainer.current)\r\n      .then(function (dataUrl) {\r\n        const fileData = dataURLtoFile(dataUrl, \"spellImg.png\");\r\n\r\n        if (spellEff.length === 0) {\r\n          setSpellEffError(\"Spell Effect is required!\");\r\n          return;\r\n        }\r\n\r\n        if (spellName.length === 0) {\r\n          setSpellNameError(\"Spell Name is required!\");\r\n          return;\r\n        }\r\n\r\n        const spellCard = {\r\n          _id: card_id,\r\n          SpellImage: spellImage,\r\n          SpellName: spellName,\r\n          SpellType: spellType,\r\n          SpellEff: spellEff,\r\n          CardType: cardType,\r\n          CardAuthor: cardAuthor,\r\n          ConvertedImage: convertedImage,\r\n        };\r\n\r\n        editSpellCard({ spellCard, selectedImage, fileData });\r\n\r\n        history.push(\"/spells\" + card_id);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  const setSpellNameHandler = (e) => {\r\n    if (e.target.value.length > 20) {\r\n      setSpellNameError(\"Characters shouldn't exceed in 20\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setSpellName(e.target.value);\r\n      setSpellNameError(undefined);\r\n    } else {\r\n      setSpellName(e.target.value);\r\n      setSpellNameError(\"Spell Name is invalid!\");\r\n    }\r\n  };\r\n\r\n  const setSpellEffHandler = (e) => {\r\n    if (e.target.value.length > 168) {\r\n      setSpellEffError(\"Characters shouldn't exceed in 168\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setSpellEff(e.target.value);\r\n      setSpellEffError(undefined);\r\n    } else {\r\n      setSpellEffError(\r\n        '\"' +\r\n          e.target.value[e.target.value.length - 1] +\r\n          '\"' +\r\n          \" character is not allowed!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Edit Spell Card\" />\r\n      <div className=\"add-card-form-container\">\r\n        <form onSubmit={editSpellCardForm} className=\"add-card-form\">\r\n          <div className=\"flex w-full items-center justify-center\">\r\n            <label className=\"w-64 flex flex-col items-center px-4 py-6 text-green-400 rounded-lg tracking-wide uppercase border border-green-400 cursor-pointer hover:bg-green-400 hover:text-gray-100\">\r\n              <svg\r\n                className=\"w-8 h-8\"\r\n                fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n              </svg>\r\n              <span className=\"mt-2 text-base leading-normal\">\r\n                {selectedImage.name ? selectedImage.name : \"Select image\"}\r\n              </span>\r\n              <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                name=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={imageChangeHandler}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Spell Name: </label>\r\n            <input\r\n              value={spellName}\r\n              onChange={setSpellNameHandler}\r\n              className=\"add-card-input-textbox\"\r\n            />\r\n            {spellNameError ? <ErrorMessage error={spellNameError} /> : \"\"}\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Spell Type: </label>\r\n            <select\r\n              value={spellType}\r\n              onChange={(e) => setSpellType(e.target.value)}\r\n              className=\"add-card-select\"\r\n            >\r\n              {spellTypeArr.map((type) => (\r\n                <option key={type} value={type} className=\"add-card-option\">\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Effect: </label>\r\n            <textarea\r\n              value={spellEff}\r\n              onChange={setSpellEffHandler}\r\n              row=\"4\"\r\n              col=\"50\"\r\n              className=\"add-card-textarea\"\r\n            ></textarea>\r\n            {spellEffError ? <ErrorMessage error={spellEffError} /> : \"\"}\r\n          </div>\r\n          <button\r\n            className={\r\n              spellNameError || spellEffError\r\n                ? \"add-card-btn-disabled\"\r\n                : \"add-card-btn\"\r\n            }\r\n            disabled={spellNameError || spellEffError ? true : false}\r\n          >\r\n            <CheckCircleIcon className=\"CheckCircleIconStyles\" />\r\n            Submit\r\n          </button>\r\n        </form>\r\n        <div className=\"add-card-converted\">\r\n          <div className=\"card-container\" ref={spellImgContainer}>\r\n            <img src={selectSpellTypeImg()} className=\"card\" />\r\n            <div className=\"spell-card-name\">{spellName}</div>\r\n            {\r\n              <div className=\"spell-card-img-container\">\r\n                <img\r\n                  className=\"spell-card-img\"\r\n                  alt=\"Spell\"\r\n                  src={file ? file : \"/image/\" + spellImage}\r\n                />\r\n              </div>\r\n            }\r\n            <div className=\"trap-card-eff\">{spellEff}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpellCardEdit;\r\n","export default __webpack_public_path__ + \"static/media/NormalTrap.5748251d.webp\";","export default __webpack_public_path__ + \"static/media/ContinuousTrap.82009874.webp\";","export default __webpack_public_path__ + \"static/media/CounterTrap.bdef31e3.webp\";","import { React, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport { trapTypeArr } from \"../card_meta_data/index\";\r\nimport dataURLtoFile from \"../cards_img/dataUrlToFile\";\r\nimport NormalTrap from \"../cards_img/NormalTrap.webp\";\r\nimport ContinuousTrap from \"../cards_img/ContinuousTrap.webp\";\r\nimport CounterTrap from \"../cards_img/CounterTrap.webp\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/solid\";\r\nimport ErrorMessage from \"../Components/ErrorMessage\";\r\n\r\nfunction AddTrapCardPage() {\r\n  const dispatch = useDispatch();\r\n  const trapImgContainer = useRef(null);\r\n  const { addTrapCard } = bindActionCreators(actionCreators, dispatch);\r\n  const regex = /^[A-Za-z0-9 .,!-]*$/;\r\n\r\n  const { loginUser } = useSelector((state) => state);\r\n\r\n  const history = useHistory();\r\n\r\n  const [selectedImageError, setSelectedImageError] = useState(undefined);\r\n  const [trapNameError, setTrapNameError] = useState(undefined);\r\n  const [trapEffError, setTrapEffError] = useState(undefined);\r\n\r\n  const [file, setFile] = useState(undefined);\r\n  const [selectedImage, setSelectedImage] = useState({});\r\n  const [trapName, setTrapName] = useState(\"\");\r\n  const [trapEff, setTrapEff] = useState(\"\");\r\n  const [trapType, setTrapType] = useState(\"Normal\");\r\n  const [cardType] = useState(\"Trap\");\r\n  const [cardAuthor] = useState(loginUser.credentials.username);\r\n\r\n  const addTrapCardForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    convertDomToImg();\r\n  };\r\n\r\n  const imageChangeHandler = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSelectedImage(e.target.files[0]);\r\n\r\n      setFile(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const selectTrapTypeImg = () => {\r\n    if (trapType === \"Normal\") return NormalTrap;\r\n    if (trapType === \"Continuous\") return ContinuousTrap;\r\n    if (trapType === \"Counter\") return CounterTrap;\r\n  };\r\n\r\n  const convertDomToImg = () => {\r\n    domtoimage\r\n      .toPng(trapImgContainer.current)\r\n      .then(function (dataUrl) {\r\n        const fileData = dataURLtoFile(dataUrl, \"trapImg.png\");\r\n\r\n        if (!selectedImage.name) {\r\n          setSelectedImageError(\"Trap Image is required!\");\r\n          alert(\"Please select image for the card.\");\r\n          return;\r\n        }\r\n\r\n        if (trapName.length === 0) {\r\n          setTrapNameError(\"Trap Name is required!\");\r\n          return;\r\n        }\r\n\r\n        if (trapEff.length === 0) {\r\n          setTrapEffError(\"Trap Effect is required!\");\r\n          return;\r\n        }\r\n\r\n        const trapCard = {\r\n          TrapName: trapName,\r\n          TrapEff: trapEff,\r\n          TrapType: trapType,\r\n          CardType: cardType,\r\n          CardAuthor: cardAuthor,\r\n        };\r\n        addTrapCard({ trapCard, selectedImage, fileData });\r\n        history.push(\"/traps\");\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  const setTrapNameHandler = (e) => {\r\n    if (e.target.value.length > 20) {\r\n      setTrapNameError(\"Characters shouldn't exceed in 20\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setTrapName(e.target.value);\r\n      setTrapNameError(undefined);\r\n    } else {\r\n      setTrapName(e.target.value);\r\n      setTrapNameError(\"Trap Name is invalid!\");\r\n    }\r\n  };\r\n\r\n  const setTrapEffHandler = (e) => {\r\n    if (e.target.value.length > 168) {\r\n      setTrapEffError(\"Characters shouldn't exceed in 168\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setTrapEff(e.target.value);\r\n      setTrapEffError(undefined);\r\n    } else {\r\n      setTrapEff(e.target.value);\r\n      setTrapEffError(\"Trap Effect is invalid!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Add Trap\" />\r\n      <div className=\"add-card-form-container\">\r\n        <form\r\n          onSubmit={addTrapCardForm}\r\n          encType=\"multipart/form-data\"\r\n          className=\"add-card-form\"\r\n        >\r\n          <div className=\"flex w-full items-center justify-center\">\r\n            <label className=\"w-64 flex flex-col items-center px-4 py-6 text-green-400 rounded-lg tracking-wide uppercase border border-green-400 cursor-pointer hover:bg-green-400 hover:text-gray-100\">\r\n              <svg\r\n                className=\"w-8 h-8\"\r\n                fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n              </svg>\r\n              <span className=\"mt-2 text-base leading-normal text-center\">\r\n                {selectedImage.name ? selectedImage.name : \"Select image\"}\r\n              </span>\r\n              <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                name=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={imageChangeHandler}\r\n              />\r\n            </label>\r\n          </div>\r\n          {selectedImageError ? (\r\n            <ErrorMessage error={selectedImageError} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <div>\r\n            <label className=\"add-card-label\">Trap Name: </label>\r\n            <input\r\n              value={trapName}\r\n              onChange={setTrapNameHandler}\r\n              className=\"add-card-input-textbox\"\r\n              placeholder=\"Trap Name\"\r\n            />\r\n            {trapNameError ? <ErrorMessage error={trapNameError} /> : \"\"}\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-label\">Trap Type: </label>\r\n            <select\r\n              onChange={(e) => setTrapType(e.target.value)}\r\n              className=\"add-card-select\"\r\n            >\r\n              {trapTypeArr.map((type) => (\r\n                <option key={type} value={type} className=\"add-card-option\">\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-label\">Effect: </label>\r\n            <textarea\r\n              value={trapEff}\r\n              onChange={setTrapEffHandler}\r\n              row=\"4\"\r\n              col=\"50\"\r\n              className=\"add-card-textarea\"\r\n            ></textarea>\r\n            {trapEffError ? <ErrorMessage error={trapEffError} /> : \"\"}\r\n          </div>\r\n          <button\r\n            className={\r\n              trapNameError || trapEffError\r\n                ? \"add-card-btn-disabled\"\r\n                : \"add-card-btn\"\r\n            }\r\n            disabled={trapNameError || trapEffError ? true : false}\r\n          >\r\n            <CheckCircleIcon className=\"CheckCircleIconStyles\" /> Submit\r\n          </button>\r\n        </form>\r\n        <div className=\"add-card-converted\">\r\n          <div className=\"card-container\" ref={trapImgContainer}>\r\n            <img src={selectTrapTypeImg()} className=\"card\" />\r\n            <div className=\"trap-card-name\">{trapName}</div>\r\n            {file && (\r\n              <div className=\"trap-card-img-container\">\r\n                <img className=\"trap-card-img\" alt=\"Trap\" src={file} />\r\n              </div>\r\n            )}\r\n            <div className=\"trap-card-eff\">{trapEff}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTrapCardPage;\r\n","import { React } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport { EyeIcon, XIcon } from \"@heroicons/react/solid\";\r\n\r\nfunction TrapCardCard({ cardInfo }) {\r\n  const dispatch = useDispatch();\r\n  const { deleteTrapCard } = bindActionCreators(actionCreators, dispatch);\r\n\r\n  const deleteHandler = () => {\r\n    deleteTrapCard(cardInfo._id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-card-container\">\r\n      {/* <img\r\n        alt=\"Trap\"\r\n        src={\"/image/\" + cardInfo.TrapImage}\r\n        className=\"card-card-image\"\r\n      /> */}\r\n      <div className=\"card-details-container\">\r\n        <p className=\"card-card-name\">{cardInfo.TrapName}</p>\r\n        <p>{cardInfo.TrapType} Trap</p>\r\n        <div className=\"card-btn-container\">\r\n          <button className=\"view-card-btn\">\r\n            <EyeIcon className=\"EyeIconStyles\" />\r\n            <Link to={\"/traps/\" + cardInfo._id}>View</Link>\r\n          </button>\r\n          <button className=\"delete-card-btn\" onClick={deleteHandler}>\r\n            <XIcon className=\"XIconStyles\" /> Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrapCardCard;\r\n","import { useEffect, React } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport TrapCardCard from \"../Components/TrapCardCard\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { PlusCircleIcon } from \"@heroicons/react/solid\";\r\nimport Loading from \"../Components/Loading\";\r\nimport CardIsEmpty from \"../Components/CardIsEmpty\";\r\n\r\nfunction TrapCardPage() {\r\n  const dispatch = useDispatch();\r\n  const { fetchAllTraps } = bindActionCreators(actionCreators, dispatch);\r\n  const state = useSelector((state) => state.trapCard);\r\n  useEffect(() => {\r\n    fetchAllTraps();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Your Trap Cards\" />\r\n      <button className=\"add-card-btn\">\r\n        <PlusCircleIcon className=\"PlusCircleIconStyles\" />\r\n        <NavLink to=\"/traps/add\">Add Trap Card</NavLink>\r\n      </button>\r\n\r\n      {state.loading ? (\r\n        <Loading />\r\n      ) : state.error === \"\" ? (\r\n        state.trapCards.length !== 0 ? (\r\n          state.trapCards.map((card) => (\r\n            <TrapCardCard cardInfo={card} key={card._id} />\r\n          ))\r\n        ) : (\r\n          <CardIsEmpty card=\"Trap\" />\r\n        )\r\n      ) : (\r\n        <p>{state.error}</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrapCardPage;\r\n","import { React, useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport downloadImage from \"../cards_img/downloadImage\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport Loading from \"../Components/Loading\";\r\nimport { DownloadIcon, PencilIcon } from \"@heroicons/react/solid\";\r\n\r\nfunction TrapCardView() {\r\n  const { card_id } = useParams();\r\n  const [cardInfo, setCardInfo] = useState([]);\r\n  const imgUrl = \"/image/\" + cardInfo.ConvertedImage;\r\n\r\n  // get card on load\r\n  useEffect(() => {\r\n    const fetchCardInfo = async () => {\r\n      const { data } = await axios.get(\"/api/cards/traps/\" + card_id);\r\n\r\n      setCardInfo(data);\r\n    };\r\n\r\n    fetchCardInfo();\r\n  }, [card_id]);\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title={cardInfo.TrapName} />\r\n      {cardInfo.length === 0 ? (\r\n        <Loading />\r\n      ) : (\r\n        <div className=\"view-card-container\">\r\n          <img\r\n            alt=\"Trap\"\r\n            src={imgUrl}\r\n            className=\"converted-image view-card-converted\"\r\n          />\r\n          <div className=\"view-card-btn-container\">\r\n            <button\r\n              onClick={() => {\r\n                downloadImage(imgUrl, cardInfo.TrapName);\r\n              }}\r\n              className=\"view-card-download-btn\"\r\n            >\r\n              <DownloadIcon className=\"DownloadIconStyles\" />\r\n              Download\r\n            </button>\r\n            <Link to={\"/traps/edit/\" + cardInfo._id}>\r\n              <button className=\"view-card-edit-btn\">\r\n                <PencilIcon className=\"PencilIconStyles\" />\r\n                Edit\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrapCardView;\r\n","import { React, useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { trapTypeArr } from \"../card_meta_data/index\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport dataURLtoFile from \"../cards_img/dataUrlToFile\";\r\nimport NormalTrap from \"../cards_img/NormalTrap.webp\";\r\nimport ContinuousTrap from \"../cards_img/ContinuousTrap.webp\";\r\nimport CounterTrap from \"../cards_img/CounterTrap.webp\";\r\nimport domtoimage from \"dom-to-image\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport { CheckCircleIcon } from \"@heroicons/react/solid\";\r\nimport ErrorMessage from \"../Components/ErrorMessage\";\r\n\r\nfunction TrapCardEdit() {\r\n  const { card_id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const trapImgContainer = useRef(null);\r\n  const { editTrapCard } = bindActionCreators(actionCreators, dispatch);\r\n  const regex = /^[A-Za-z0-9 .,!-]*$/;\r\n\r\n  const history = useHistory();\r\n\r\n  const [trapNameError, setTrapNameError] = useState(undefined);\r\n  const [trapEffError, setTrapEffError] = useState(undefined);\r\n\r\n  const [file, setFile] = useState(undefined);\r\n  const [selectedImage, setSelectedImage] = useState({});\r\n  const [trapImage, setTrapImage] = useState(\"\");\r\n  const [trapName, setTrapName] = useState(\"\");\r\n  const [trapType, setTrapType] = useState(\"\");\r\n  const [trapEff, setTrapEff] = useState(\"\");\r\n  const [cardType, setCardType] = useState(\"Trap\");\r\n  const [cardAuthor, setCardAuthor] = useState(\"\");\r\n  const [convertedImage, setConvertedImage] = useState(\"\");\r\n\r\n  // need to implement redux in app in order to maintain the data\r\n  // get card on load\r\n  useEffect(() => {\r\n    const fetchCardInfo = async () => {\r\n      const { data } = await axios.get(\"/api/cards/traps/\" + card_id);\r\n\r\n      setTrapImage(data.TrapImage);\r\n      setTrapName(data.TrapName);\r\n      setTrapType(data.TrapType);\r\n      setTrapEff(data.TrapEff);\r\n      setCardType(data.CardType);\r\n      setCardAuthor(data.CardAuthor);\r\n      setConvertedImage(data.ConvertedImage);\r\n    };\r\n\r\n    fetchCardInfo();\r\n  }, [card_id]);\r\n\r\n  const editTrapCardForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    convertDomToImg();\r\n  };\r\n\r\n  const imageChangeHandler = (e) => {\r\n    if (e.target.files[0]) {\r\n      setSelectedImage(e.target.files[0]);\r\n      setFile(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const selectTrapTypeImg = () => {\r\n    if (trapType === \"Normal\") return NormalTrap;\r\n    if (trapType === \"Continuous\") return ContinuousTrap;\r\n    if (trapType === \"Counter\") return CounterTrap;\r\n  };\r\n\r\n  const convertDomToImg = () => {\r\n    domtoimage\r\n      .toPng(trapImgContainer.current)\r\n      .then(function (dataUrl) {\r\n        const fileData = dataURLtoFile(dataUrl, \"trapImg.png\");\r\n\r\n        if (trapName.length === 0) {\r\n          setTrapNameError(\"Trap Name is required!\");\r\n          return;\r\n        }\r\n\r\n        if (trapEff.length === 0) {\r\n          setTrapEffError(\"Trap Effect is required!\");\r\n          return;\r\n        }\r\n\r\n        const trapCard = {\r\n          _id: card_id,\r\n          TrapImage: trapImage,\r\n          TrapName: trapName,\r\n          TrapType: trapType,\r\n          TrapEff: trapEff,\r\n          CardType: cardType,\r\n          CardAuthor: cardAuthor,\r\n          ConvertedImage: convertedImage,\r\n        };\r\n\r\n        editTrapCard({ trapCard, selectedImage, fileData });\r\n\r\n        history.push(\"/traps/\" + card_id);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"oops, something went wrong!\", error);\r\n      });\r\n  };\r\n\r\n  const setTrapNameHandler = (e) => {\r\n    if (e.target.value.length > 20) {\r\n      setTrapNameError(\"Characters shouldn't exceed in 20\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setTrapName(e.target.value);\r\n      setTrapNameError(undefined);\r\n    } else {\r\n      setTrapName(e.target.value);\r\n      setTrapNameError(\"Trap Name is invalid!\");\r\n    }\r\n  };\r\n\r\n  const setTrapEffHandler = (e) => {\r\n    if (e.target.value.length > 168) {\r\n      setTrapEffError(\"Characters shouldn't exceed in 168\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setTrapEff(e.target.value);\r\n      setTrapEffError(undefined);\r\n    } else {\r\n      setTrapEffError(\r\n        '\"' +\r\n          e.target.value[e.target.value.length - 1] +\r\n          '\"' +\r\n          \" character is not allowed!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AllPageTitles title=\"Edit Trap Card\" />\r\n      <div className=\"add-card-form-container\">\r\n        <form onSubmit={editTrapCardForm} className=\"add-card-form\">\r\n          <div className=\"flex w-full items-center justify-center\">\r\n            <label className=\"w-64 flex flex-col items-center px-4 py-6 text-green-400 rounded-lg tracking-wide uppercase border border-green-400 cursor-pointer hover:bg-green-400 hover:text-gray-100\">\r\n              <svg\r\n                className=\"w-8 h-8\"\r\n                fill=\"currentColor\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                viewBox=\"0 0 20 20\"\r\n              >\r\n                <path d=\"M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z\" />\r\n              </svg>\r\n              <span className=\"mt-2 text-base leading-normal\">\r\n                {selectedImage.name ? selectedImage.name : \"Select image\"}\r\n              </span>\r\n              <input\r\n                type=\"file\"\r\n                className=\"hidden\"\r\n                name=\"file\"\r\n                accept=\"image/*\"\r\n                onChange={imageChangeHandler}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Trap Name: </label>\r\n            <input\r\n              value={trapName}\r\n              onChange={setTrapNameHandler}\r\n              className=\"add-card-input-textbox\"\r\n            />\r\n            {trapNameError ? <ErrorMessage error={trapNameError} /> : \"\"}\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Trap Type: </label>\r\n            <select\r\n              value={trapType}\r\n              onChange={(e) => setTrapType(e.target.value)}\r\n              className=\"add-card-select\"\r\n            >\r\n              {trapTypeArr.map((type) => (\r\n                <option key={type} value={type} className=\"add-card-option\">\r\n                  {type}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label className=\"add-card-input-label\">Effect: </label>\r\n            <textarea\r\n              value={trapEff}\r\n              onChange={setTrapEffHandler}\r\n              row=\"4\"\r\n              col=\"50\"\r\n              className=\"add-card-textarea\"\r\n            ></textarea>\r\n            {trapEffError ? <ErrorMessage error={trapEffError} /> : \"\"}\r\n          </div>\r\n          <button\r\n            className={\r\n              trapNameError || trapEffError\r\n                ? \"add-card-btn-disabled\"\r\n                : \"add-card-btn\"\r\n            }\r\n            disabled={trapNameError || trapEffError ? true : false}\r\n          >\r\n            <CheckCircleIcon className=\"CheckCircleIconStyles\" /> Submit\r\n          </button>\r\n        </form>\r\n        <div className=\"add-card-converted\">\r\n          <div className=\"card-container\" ref={trapImgContainer}>\r\n            <img src={selectTrapTypeImg()} className=\"card\" />\r\n            <div className=\"trap-card-name\">{trapName}</div>\r\n            {\r\n              <div className=\"trap-card-img-container\">\r\n                <img\r\n                  className=\"trap-card-img\"\r\n                  alt=\"Trap\"\r\n                  src={file ? file : \"/image/\" + trapImage}\r\n                />\r\n              </div>\r\n            }\r\n            <div className=\"trap-card-eff\">{trapEff}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrapCardEdit;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport Loading from \"../Components/Loading\";\r\nimport ErrorMessage from \"../Components/ErrorMessage\";\r\n\r\nfunction RegisterPage() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [emailError, setEmailError] = useState(undefined);\r\n  const [usernameError, setUsernameError] = useState(undefined);\r\n  const dispatch = useDispatch();\r\n\r\n  const regex = /^[A-Za-z0-9_]*$/;\r\n\r\n  const { signupUser, authUser } = bindActionCreators(actionCreators, dispatch);\r\n  const stateSignup = useSelector((state) => state.signupUser);\r\n  const stateLogin = useSelector((state) => state.loginUser);\r\n\r\n  const userSignupForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (emailError) {\r\n      setEmailError(\"The email is invalid!\");\r\n      return;\r\n    }\r\n\r\n    const userData = {\r\n      Email: email,\r\n      Username: username,\r\n      Password: password,\r\n    };\r\n\r\n    signupUser(userData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const authUserOnLoad = () => {\r\n      authUser({ Username: undefined, Password: undefined });\r\n    };\r\n\r\n    authUserOnLoad();\r\n  }, []);\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex =\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\n    return emailRegex.test(String(email).toLowerCase());\r\n  };\r\n\r\n  const setEmailHandler = (e) => {\r\n    setEmail(e.target.value);\r\n    if (validateEmail(e.target.value)) {\r\n      setEmailError(undefined);\r\n    } else {\r\n      setEmailError(true);\r\n    }\r\n  };\r\n\r\n  const setUsernameHandler = (e) => {\r\n    if (e.target.value.length > 16) {\r\n      setUsernameError(\"Characters shouldn't exceed in 16\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setUsername(e.target.value);\r\n      setUsernameError(undefined);\r\n    } else {\r\n      setUsername(e.target.value);\r\n      setUsernameError(\r\n        \"Letters, Numbers and Underscore are the only characters allowed!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"signup-login-form\">\r\n        <h1 className=\"signup-login-title\">Sign Up</h1>\r\n        <form onSubmit={userSignupForm}>\r\n          <div>\r\n            <label className=\"signup-login-input-label\">Email</label>\r\n            <br />\r\n            <input\r\n              onChange={setEmailHandler}\r\n              type=\"email\"\r\n              placeholder=\"Enter your Email\"\r\n              className=\"signup-login-input-textbox\"\r\n              value={email}\r\n            />\r\n            {typeof emailError === \"string\" ? (\r\n              <ErrorMessage error={emailError} />\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div>\r\n            <label className=\"signup-login-input-label\">Username</label>\r\n            <br />\r\n            <input\r\n              onChange={setUsernameHandler}\r\n              type=\"text\"\r\n              placeholder=\"Enter your Username\"\r\n              className=\"signup-login-input-textbox\"\r\n            />\r\n            {usernameError ? <ErrorMessage error={usernameError} /> : \"\"}\r\n          </div>\r\n          <div>\r\n            <label className=\"signup-login-input-label\">Password</label>\r\n            <br />\r\n            <input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              type=\"password\"\r\n              placeholder=\"Enter your Password\"\r\n              className=\"signup-login-input-textbox\"\r\n            />\r\n          </div>\r\n          {stateSignup.signupError ? (\r\n            <p className=\"signup-login-error-message\">\r\n              {stateSignup.signupError}\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <button className=\"signup-login-form-submit\">Sign Up</button>\r\n          <p className=\"signup-login-link-btn\">\r\n            <span className=\"text-gray-900\">Already registered? </span>\r\n            <Link to=\"/login\">Log In</Link>\r\n          </p>\r\n        </form>\r\n        {stateSignup.loading && <Loading />}\r\n        {stateSignup.isSuccess && <Redirect to=\"/login\" />}\r\n        {stateLogin.loginState.isAuth ? (\r\n          <Redirect to=\"/\" />\r\n        ) : (\r\n          <p className=\"signup-login-error-message\"></p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterPage;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport Loading from \"../Components/Loading\";\r\nimport ErrorMessage from \"../Components/ErrorMessage\";\r\n\r\nfunction LoginPage() {\r\n  const dispatch = useDispatch();\r\n  const { loginUser } = bindActionCreators(actionCreators, dispatch);\r\n  const state = useSelector((state) => state.loginUser);\r\n\r\n  const regex = /^[A-Za-z0-9_]*$/;\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [usernameError, setUsernameError] = useState(undefined);\r\n\r\n  const loginUserForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (usernameError) {\r\n      return;\r\n    }\r\n\r\n    const userCred = {\r\n      Username: username,\r\n      Password: password,\r\n    };\r\n\r\n    loginUser(userCred);\r\n  };\r\n\r\n  const setUsernameHandler = (e) => {\r\n    if (e.target.value.length > 16) {\r\n      setUsernameError(\"Characters shouldn't exceed in 16\");\r\n    } else if (regex.test(e.target.value)) {\r\n      setUsername(e.target.value);\r\n      setUsernameError(undefined);\r\n    } else {\r\n      setUsername(e.target.value);\r\n      setUsernameError(\r\n        \"Letters, Numbers and Underscore are the only characters allowed!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex h-screen\">\r\n      <div className=\"signup-login-form\">\r\n        <h1 className=\"signup-login-title\">Log In</h1>\r\n        <form onSubmit={loginUserForm}>\r\n          <div>\r\n            <label className=\"signup-login-input-label\">Username</label>\r\n            <br />\r\n            <input\r\n              onChange={setUsernameHandler}\r\n              type=\"text\"\r\n              name=\"Username\"\r\n              className=\"signup-login-input-textbox\"\r\n              placeholder=\"Enter your Username\"\r\n              value={username}\r\n              required\r\n            />\r\n            {usernameError ? <ErrorMessage error={usernameError} /> : \"\"}\r\n          </div>\r\n          <div>\r\n            <label className=\"signup-login-input-label\">Password</label>\r\n            <br />\r\n            <input\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              type=\"password\"\r\n              name=\"Password\"\r\n              className=\"signup-login-input-textbox\"\r\n              placeholder=\"Enter your Password\"\r\n              required\r\n            />\r\n          </div>\r\n          {state.loginState.isAuth ? (\r\n            <Redirect to=\"/\" />\r\n          ) : (\r\n            <p className=\"signup-login-error-message\">\r\n              {state.loginState.loginError}\r\n            </p>\r\n          )}\r\n          <button\r\n            className={\r\n              usernameError\r\n                ? \"signup-login-form-submit-disabled\"\r\n                : \"signup-login-form-submit\"\r\n            }\r\n            disabled={usernameError ? true : false}\r\n          >\r\n            Login\r\n          </button>\r\n          <p className=\"signup-login-link-btn\">\r\n            <span className=\"text-gray-900\">Not registered yet? </span>\r\n            <Link to=\"/signup\">Signup now</Link>\r\n          </p>\r\n          {state.loading ? <Loading /> : \"\"}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","import { React, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { actionCreators } from \"../redux/index\";\r\nimport AllPageTitles from \"../Components/AllPageTitles\";\r\nimport Loading from \"../Components/Loading\";\r\n\r\nfunction HomePage() {\r\n  const dispatch = useDispatch();\r\n  const { fetchAllMonsters, fetchAllSpells, fetchAllTraps } =\r\n    bindActionCreators(actionCreators, dispatch);\r\n\r\n  useEffect(() => {\r\n    fetchAllMonsters();\r\n    fetchAllSpells();\r\n    fetchAllTraps();\r\n  }, []);\r\n  const { monsterCard, trapCard, spellCard } = useSelector((state) => state);\r\n\r\n  return (\r\n    <div className=\"w-full\">\r\n      <AllPageTitles title=\"Home\" />\r\n\r\n      <div>\r\n        <div className=\"w-10/12 sm:w-4/12 mx-auto my-2\">\r\n          <h3 className=\"text-center text-xl font-bold bg-gray-700 text-gray-100 py-4 rounded-t-xl\">\r\n            All Your Cards\r\n          </h3>\r\n          <p className=\"text-center text-2xl font-semibold bg-gray-600 text-gray-100 py-4 rounded-b-xl\">\r\n            {monsterCard.monsterCards.length +\r\n              spellCard.spellCards.length +\r\n              trapCard.trapCards.length}\r\n          </p>\r\n        </div>\r\n        <div className=\"w-10/12 sm:w-4/12 mx-auto my-2\">\r\n          <h4 className=\"text-center text-xl font-bold bg-yellow-500 text-gray-100 py-4 rounded-t-xl\">\r\n            Monsters\r\n          </h4>\r\n          <div className=\"text-center text-2xl font-semibold bg-yellow-400 text-gray-100 py-4 rounded-b-xl\">\r\n            {monsterCard.loading ? (\r\n              <Loading />\r\n            ) : (\r\n              <p>{monsterCard.monsterCards.length}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"w-10/12 sm:w-4/12 mx-auto my-2\">\r\n          <h4 className=\"text-center text-xl font-bold bg-green-500 text-gray-100 py-4 rounded-t-xl\">\r\n            Spells\r\n          </h4>\r\n          <div className=\"text-center text-2xl font-semibold bg-green-400 text-gray-100 py-4 rounded-b-xl\">\r\n            {spellCard.loading ? (\r\n              <Loading />\r\n            ) : (\r\n              <p> {spellCard.spellCards.length}</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"w-10/12 sm:w-4/12 mx-auto my-2\">\r\n          <h4 className=\"text-center text-xl font-bold bg-pink-600 text-gray-100 py-4 rounded-t-xl\">\r\n            Traps\r\n          </h4>\r\n          <div className=\"text-center text-2xl font-semibold bg-pink-500 text-gray-100 py-4 rounded-b-xl\">\r\n            {trapCard.loading ? <Loading /> : trapCard.trapCards.length}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"text-gray-400 height-4 text-md py-4 mt-auto\">\r\n      <p className=\"text-center\">Copyright &copy; 2021 Jan Eleven</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { useEffect } from \"react\";\nimport \"./css/App.min.css\";\nimport { useLocation, Switch, Route, Redirect } from \"react-router-dom\";\nimport NavigationBar from \"./Components/Navigation\";\nimport MonsterCardPage from \"./Screens/MonsterCardPage\";\nimport MonsterCardView from \"./Screens/MonsterCardView\";\nimport MonsterCardEdit from \"./Screens/MonsterCardEdit\";\nimport AddMonsterCardPage from \"./Screens/AddMonsterCardPage\";\nimport SpellCardPage from \"./Screens/SpellCardPage\";\nimport AddSpellCardPage from \"./Screens/AddSpellCardPage\";\nimport SpellCardView from \"./Screens/SpellCardView\";\nimport SpellCardEdit from \"./Screens/SpellCardEdit\";\nimport AddTrapCardPage from \"./Screens/AddTrapCardPage\";\nimport TrapCardPage from \"./Screens/TrapCardPage\";\nimport TrapCardView from \"./Screens/TrapCardView\";\nimport TrapCardEdit from \"./Screens/TrapCardEdit\";\nimport RegisterPage from \"./Screens/RegisterPage\";\nimport LoginPage from \"./Screens/LoginPage\";\nimport HomePage from \"./Screens/HomePage\";\nimport Footer from \"./Components/Footer\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators } from \"./redux/index\";\nimport { bindActionCreators } from \"redux\";\n\nfunction App() {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { authUser } = bindActionCreators(actionCreators, dispatch);\n\n  const state = useSelector((state) => state.loginUser);\n\n  useEffect(() => {\n    const authUserOnLoad = () => {\n      authUser({ Username: undefined, Password: undefined });\n    };\n\n    authUserOnLoad();\n  }, []);\n\n  return (\n    <div className=\"flex flex-col h-screen\">\n      {location.pathname !== \"/login\" && location.pathname !== \"/signup\" && (\n        <NavigationBar />\n      )}\n      <Switch>\n        {/* Login and Sign-up Page */}\n        <Route exact path=\"/signup\">\n          <RegisterPage />\n        </Route>\n        <Route exact path=\"/login\">\n          {/* check if user is NOT authenticated, then user cannot go to this route */}\n          {state.loginState.redirect ? (\n            <Redirect to={state.loginState.redirect} />\n          ) : (\n            <LoginPage />\n          )}\n        </Route>\n\n        {/* monster card routes */}\n        <Route exact path=\"/monsters/add\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <AddMonsterCardPage />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/monsters\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <MonsterCardPage />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/monster/edit/:card_id\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <MonsterCardEdit />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/monsters/:card_id\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <MonsterCardView />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        {/* spell card routes */}\n        <Route exact path=\"/spells/add\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <AddSpellCardPage />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/spells\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <SpellCardPage />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/spells/edit/:card_id\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <SpellCardEdit />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/spells/:card_id\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <SpellCardView />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        {/* trap card routes */}\n        <Route exact path=\"/traps\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <TrapCardPage />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/traps/add\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <AddTrapCardPage />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/traps/:card_id\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <TrapCardView />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/traps/edit/:card_id\">\n          {/* check if user is authenticated, proceed to login page if not */}\n          {state.loginState.isAuth ? (\n            <TrapCardEdit />\n          ) : (\n            <Redirect to=\"/login\" />\n          )}\n        </Route>\n        <Route exact path=\"/\">\n          {state.loginState.isAuth ? <HomePage /> : <Redirect to=\"/login\" />}\n        </Route>\n      </Switch>\n      {location.pathname !== \"/login\" && location.pathname !== \"/signup\" && (\n        <Footer />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  loading: false,\r\n  monsterCards: [],\r\n  error: \"\",\r\n};\r\n\r\nconst monsterCardsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    // fetch all monsters\r\n    case \"FETCH_ALL_MONSTER_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"FETCH_ALL_MONSTER_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        monsterCards: action.payload,\r\n        error: \"\",\r\n      };\r\n    case \"FETCH_ALL_MONSTER_FAILS\":\r\n      return { loading: false, monsterCards: [], error: action.payload };\r\n    // add 1 monster\r\n    case \"ADD_MONSTER_CARD_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"ADD_MONSTER_CARD_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        monsterCards: [...state.monsterCards, action.payload],\r\n        error: \"\",\r\n      };\r\n    case \"ADD_MONSTER_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        monsterCards: state.monsterCards,\r\n        error: action.payload,\r\n      };\r\n    // delete 1 monster\r\n    case \"DELETE_MONSTER_CARD_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"DELETE_MONSTER_CARD_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        monsterCards: state.monsterCards.filter(\r\n          (monster) => monster._id !== action.payload._id\r\n        ),\r\n        error: \"\",\r\n      };\r\n    case \"DELETE_MONSTER_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        monsterCards: state.monsterCards,\r\n        error: action.payload,\r\n      };\r\n    // edit monster\r\n    case \"EDIT_MONSTER_CARD_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"EDIT_MONSTER_CARD_SUCCESS\":\r\n      for (let i in state.monsterCards) {\r\n        if (action.payload._id === state.monsterCards[i]._id) {\r\n          state.monsterCards[i] = action.payload;\r\n          break;\r\n        }\r\n      }\r\n      return {\r\n        loading: false,\r\n        monsterCards: state.monsterCards,\r\n        error: \"\",\r\n      };\r\n    case \"EDIT_MONSTER_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        monsterCards: state.monsterCards,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default monsterCardsReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  spellCards: [],\r\n  error: \"\",\r\n};\r\n\r\nconst spellCardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_SPELL_CARD_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"ADD_SPELL_CARD_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        spellCards: [...state.spellCard, action.payload],\r\n        error: \"\",\r\n      };\r\n    case \"ADD_SPELL_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        spellCards: state.spellCards,\r\n        error: action.payload,\r\n      };\r\n    case \"FETCH_ALL_SPELLS_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"FETCH_ALL_SPELLS_SUCCESS\":\r\n      return { loading: false, spellCards: action.payload, error: \"\" };\r\n    case \"FETCH_ALL_SPELLS_FAILS\":\r\n      return { loading: false, spellCards: [], error: action.payload };\r\n    case \"EDIT_SPELL_CARD_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"EDIT_SPELL_CARD_SUCCESS\":\r\n      for (let i in state.spellCards) {\r\n        if (state.spellCards[i]._id === action.payload._id) {\r\n          state.spellCards[i] = action.payload;\r\n          return;\r\n        }\r\n      }\r\n      return {\r\n        loading: false,\r\n        spellCards: state.spellCards,\r\n        error: \"\",\r\n      };\r\n    case \"EDIT_SPELL_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        spellCards: state.spellCards,\r\n        error: action.payload,\r\n      };\r\n    case \"DELETE_SPELL_CARD_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"DELETE_SPELL_CARD_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        spellCards: state.spellCards.filter(\r\n          (card) => card._id !== action.payload._id\r\n        ),\r\n        error: \"\",\r\n      };\r\n    case \"DELETE_SPELL_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        spellCards: state.spellCards,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default spellCardReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  trapCards: [],\r\n  error: \"\",\r\n};\r\n\r\nconst trapCardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TRAP_CARD_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"ADD_TRAP_CARD_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        trapCards: [...state.trapCards, action.payload],\r\n        error: \"\",\r\n      };\r\n    case \"ADD_TRAP_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        trapCards: state.trapCards,\r\n        error: action.payload,\r\n      };\r\n    case \"FETCH_TRAP_CARD_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"FETCH_TRAP_CARD_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        trapCards: action.payload,\r\n        error: \"\",\r\n      };\r\n    case \"FETCH_TRAP_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        trapCards: [],\r\n        error: action.payload,\r\n      };\r\n    case \"EDIT_TRAP_CARD_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"EDIT_TRAP_CARD_SUCCESS\":\r\n      for (let i in state.trapCards) {\r\n        if (state.trapCards[i]._id === action.payload._id) {\r\n          state.trapCards[i] = action.payload;\r\n          break;\r\n        }\r\n      }\r\n      return {\r\n        loading: false,\r\n        trapCards: state.trapCards,\r\n        error: \"\",\r\n      };\r\n    case \"EDIT_TRAP_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        trapCards: state.trapCards,\r\n        error: action.payload,\r\n      };\r\n    case \"DELETE_TRAP_CARD_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"DELETE_TRAP_CARD_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        trapCards: state.trapCards.filter(\r\n          (card) => card._id !== action.payload._id\r\n        ),\r\n        error: \"\",\r\n      };\r\n    case \"DELETE_TRAP_CARD_FAILS\":\r\n      return {\r\n        loading: false,\r\n        trapCards: state.trapCards,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default trapCardReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  newUser: undefined,\r\n  error: \"\",\r\n  signupError: undefined,\r\n  isSuccess: false,\r\n};\r\n\r\nconst SignupUserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SIGNUP_USER_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"SIGNUP_USER_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        newUser: action.payload,\r\n        error: \"\",\r\n        signupError: undefined,\r\n        isSuccess: true,\r\n      };\r\n    case \"SIGNUP_USER_ERROR\":\r\n      return {\r\n        loading: false,\r\n        newUser: undefined,\r\n        error: \"\",\r\n        signupError: action.payload,\r\n        isSuccess: false,\r\n      };\r\n    case \"SIGNUP_USER_FAILS\":\r\n      return {\r\n        loading: false,\r\n        newUser: undefined,\r\n        error: action.payload,\r\n        signupError: undefined,\r\n        isSuccess: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default SignupUserReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  loginState: {\r\n    isAuth: false,\r\n    loginError: \"\",\r\n    redirect: undefined,\r\n  },\r\n  credentials: {\r\n    username: undefined,\r\n    password: undefined,\r\n  },\r\n  error: \"\",\r\n};\r\n\r\nconst loginUserReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_USER_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"LOGIN_USER_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        loginState: action.payload.loginState,\r\n        credentials: action.payload.credentials,\r\n        error: \"\",\r\n      };\r\n    case \"LOGIN_USER_ERROR\":\r\n      return {\r\n        loading: false,\r\n        loginState: { isAuth: false, loginError: \"\", redirect: \"\" },\r\n        credentials: {\r\n          username: undefined,\r\n          password: undefined,\r\n        },\r\n        error: action.payload,\r\n      };\r\n    case \"LOGOUT_USER_REQUEST\":\r\n      return { ...state, loading: true };\r\n    case \"LOGOUT_USER_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        loginState: action.payload.loginState,\r\n        credentials: action.payload.credentials,\r\n        error: \"\",\r\n      };\r\n    case \"LOGOUT_USER_ERROR\":\r\n      return {\r\n        loading: false,\r\n        loginState: { isAuth: false, loginError: \"\", redirect: \"\" },\r\n        credentials: {\r\n          username: undefined,\r\n          password: undefined,\r\n        },\r\n        error: action.payload,\r\n      };\r\n    case \"AUTHENTICATE_USER_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case \"AUTHENTICATE_USER_SUCCESS\":\r\n      return {\r\n        loading: false,\r\n        loginState: action.payload.loginState,\r\n        credentials: action.payload.credentials,\r\n        error: \"\",\r\n      };\r\n    case \"AUTHENTICATE_USER_FAILS\":\r\n      return {\r\n        loading: false,\r\n        loginState: { isAuth: false, loginError: \"\", redirect: \"\" },\r\n        credentials: { username: undefined, password: undefined },\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loginUserReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport monsterCardReducer from \"./monsterCardReducer\";\r\nimport spellCardReducer from \"./spellCardReducer\";\r\nimport trapCardReducer from \"./trapCardReducer\";\r\nimport signupUserReducer from \"./signupUser\";\r\nimport loginUserReducer from \"./loginUser\";\r\n\r\nconst reducers = combineReducers({\r\n  monsterCard: monsterCardReducer,\r\n  spellCard: spellCardReducer,\r\n  trapCard: trapCardReducer,\r\n  signupUser: signupUserReducer,\r\n  loginUser: loginUserReducer,\r\n});\r\n\r\nexport default reducers;\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  {},\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}